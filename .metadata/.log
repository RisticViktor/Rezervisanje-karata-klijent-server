!SESSION 2022-12-22 23:21:26.806 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-22 23:22:26.187
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-22 23:22:26.188
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3428420d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@523ade68,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-22 23:22:26.188
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@b529d7e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3664c596,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-22 23:22:56.986
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.intro 4 0 2022-12-22 23:23:39.318
!MESSAGE An RSS feed "http://www.eclipse.org/home/eclipsenews.rss" is malformed. News from this site is temporarily unavailable.
!SESSION 2022-12-22 23:41:44.123 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-22 23:41:53.801
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-22 23:41:53.801
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@21eedcde,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@67396475,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-22 23:41:53.802
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@55b74e6b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3c1908c8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-22 23:42:03.925
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-12-22 23:48:32.839 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-22 23:48:43.473
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-22 23:48:43.473
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5bc14211,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4b99648a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-22 23:48:43.473
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5d2e65bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@254513e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-22 23:48:50.814
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-12-23 02:36:21.191 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-23 02:36:30.454
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-23 02:36:30.454
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@66716959,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@34e07e65,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-23 02:36:30.455
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7ca0166c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dcad16f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-23 02:36:38.292
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-12-23 16:30:41.184 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-23 16:33:56.346
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-23 16:33:56.346
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@28db2afb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5c703860,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-23 16:33:56.346
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6315bb4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4682882a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-23 16:34:28.749
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-12-24 22:50:21.782 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-24 22:51:09.445
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-24 22:51:09.445
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5c703860,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6315bb4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-24 22:51:09.445
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4682882a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@37fffef3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-24 22:51:37.341
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 2 0 2022-12-25 00:25:30.620
!MESSAGE Save Failed
!STACK 0
java.lang.IllegalArgumentException: Illegal value: -1
	at org.eclipse.core.internal.resources.Resource.revertModificationStamp(Resource.java:1585)
	at org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.commitFileBufferContent(ResourceTextFileBuffer.java:360)
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.commit(ResourceFileBuffer.java:317)
	at org.eclipse.jdt.internal.ui.javaeditor.DocumentAdapter.save(DocumentAdapter.java:516)
	at org.eclipse.jdt.internal.core.CommitWorkingCopyOperation.executeOperation(CommitWorkingCopyOperation.java:127)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:811)
	at org.eclipse.jdt.internal.core.CompilationUnit.commitWorkingCopy(CompilationUnit.java:405)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.commitWorkingCopy(CompilationUnitDocumentProvider.java:1418)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$3.execute(CompilationUnitDocumentProvider.java:1495)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider$DocumentProviderOperation.run(TextFileDocumentProvider.java:133)
	at org.eclipse.ui.actions.WorkspaceModifyDelegatingOperation.execute(WorkspaceModifyDelegatingOperation.java:71)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.lambda$0(WorkspaceModifyOperation.java:110)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:131)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:76)
	at org.eclipse.ui.internal.editors.text.WorkspaceOperationRunner.run(WorkspaceOperationRunner.java:66)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.executeOperation(TextFileDocumentProvider.java:461)
	at org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(TextFileDocumentProvider.java:764)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSave(AbstractTextEditor.java:5008)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSave(CompilationUnitEditor.java:1262)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:1316)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.doSave(AbstractTextEditor.java:7152)
	at org.eclipse.ui.Saveable.doSave(Saveable.java:213)
	at org.eclipse.ui.internal.SaveableHelper.doSaveModel(SaveableHelper.java:333)
	at org.eclipse.ui.internal.SaveableHelper.lambda$1(SaveableHelper.java:196)
	at org.eclipse.ui.internal.SaveableHelper.lambda$3(SaveableHelper.java:271)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:434)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:352)
	at org.eclipse.ui.internal.WorkbenchWindow.lambda$7(WorkbenchWindow.java:2345)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2343)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:278)
	at org.eclipse.ui.internal.SaveableHelper.runProgressMonitorOperation(SaveableHelper.java:260)
	at org.eclipse.ui.internal.SaveableHelper.saveModels(SaveableHelper.java:207)
	at org.eclipse.ui.internal.SaveableHelper.savePart(SaveableHelper.java:150)
	at org.eclipse.ui.internal.WorkbenchPage.saveSaveable(WorkbenchPage.java:3820)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:3833)
	at org.eclipse.ui.internal.handlers.SaveHandler.execute(SaveHandler.java:82)
	at org.eclipse.ui.internal.handlers.HandlerProxy.execute(HandlerProxy.java:283)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor55.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1270)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4958)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3624)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1041)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2022-12-25 03:47:00.331
!MESSAGE Internal Error
!STACK 1
org.eclipse.core.runtime.CoreException: Some characters cannot be mapped using "Cp1251" character encoding.
Either change the encoding or remove the characters which are not supported by the "Cp1251" character encoding.
	at org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.commitFileBufferContent(ResourceTextFileBuffer.java:337)
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.commit(ResourceFileBuffer.java:317)
	at org.eclipse.ltk.core.refactoring.resource.ResourceChange$ValidationState.saveIfDirty(ResourceChange.java:253)
	at org.eclipse.ltk.core.refactoring.resource.ResourceChange.isValid(ResourceChange.java:148)
	at org.eclipse.ltk.core.refactoring.CompositeChange.isValid(CompositeChange.java:241)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.isValid(DynamicValidationStateChange.java:97)
	at org.eclipse.ltk.core.refactoring.CompositeChange.isValid(CompositeChange.java:241)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.isValid(DynamicValidationStateChange.java:97)
	at org.eclipse.ltk.core.refactoring.CompositeChange.isValid(CompositeChange.java:241)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:247)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Caused by: java.nio.charset.UnmappableCharacterException: Input length = 1
	at java.base/java.nio.charset.CoderResult.throwException(CoderResult.java:275)
	at java.base/java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:820)
	at org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.commitFileBufferContent(ResourceTextFileBuffer.java:325)
	... 18 more
!SUBENTRY 1 org.eclipse.core.filebuffers 4 3 2022-12-25 03:47:00.378
!MESSAGE Some characters cannot be mapped using "Cp1251" character encoding.
Either change the encoding or remove the characters which are not supported by the "Cp1251" character encoding.
!STACK 0
java.nio.charset.UnmappableCharacterException: Input length = 1
	at java.base/java.nio.charset.CoderResult.throwException(CoderResult.java:275)
	at java.base/java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:820)
	at org.eclipse.core.internal.filebuffers.ResourceTextFileBuffer.commitFileBufferContent(ResourceTextFileBuffer.java:325)
	at org.eclipse.core.internal.filebuffers.ResourceFileBuffer.commit(ResourceFileBuffer.java:317)
	at org.eclipse.ltk.core.refactoring.resource.ResourceChange$ValidationState.saveIfDirty(ResourceChange.java:253)
	at org.eclipse.ltk.core.refactoring.resource.ResourceChange.isValid(ResourceChange.java:148)
	at org.eclipse.ltk.core.refactoring.CompositeChange.isValid(CompositeChange.java:241)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.isValid(DynamicValidationStateChange.java:97)
	at org.eclipse.ltk.core.refactoring.CompositeChange.isValid(CompositeChange.java:241)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.isValid(DynamicValidationStateChange.java:97)
	at org.eclipse.ltk.core.refactoring.CompositeChange.isValid(CompositeChange.java:241)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:247)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
!SESSION 2022-12-25 13:46:22.245 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-25 13:47:14.676
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 13:47:14.676
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@52d9f36b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5f9ebd5a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 13:47:14.677
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@175bf9c9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2db3675a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-25 13:47:28.474
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2022-12-25 14:35:56.082
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Core Exception [code 273] Problems encountered while deleting resources.
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:52)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Contains: Could not delete 'C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary'.
org.eclipse.core.runtime.CoreException: Problems encountered while deleting files.
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:141)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:316)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:802)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1784)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:762)
	at org.eclipse.ltk.core.refactoring.resource.DeleteResourceChange.perform(DeleteResourceChange.java:163)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Contains: Could not delete: C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary.
java.nio.file.FileSystemException: C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary: The process cannot access the file because it is being used by another process
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1185)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:316)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:802)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1784)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:762)
	at org.eclipse.ltk.core.refactoring.resource.DeleteResourceChange.perform(DeleteResourceChange.java:163)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Caused by: org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:775)
	at org.eclipse.ltk.core.refactoring.resource.DeleteResourceChange.perform(DeleteResourceChange.java:163)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Contains: Could not delete 'C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary'.
org.eclipse.core.runtime.CoreException: Problems encountered while deleting files.
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:141)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:316)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:802)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1784)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:762)
	at org.eclipse.ltk.core.refactoring.resource.DeleteResourceChange.perform(DeleteResourceChange.java:163)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Contains: Could not delete: C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary.
java.nio.file.FileSystemException: C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary: The process cannot access the file because it is being used by another process
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1185)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:316)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:802)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1784)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:762)
	at org.eclipse.ltk.core.refactoring.resource.DeleteResourceChange.perform(DeleteResourceChange.java:163)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
!SUBENTRY 1 org.eclipse.core.resources 4 273 2022-12-25 14:35:56.085
!MESSAGE Problems encountered while deleting resources.
!SUBENTRY 2 org.eclipse.core.resources 4 273 2022-12-25 14:35:56.085
!MESSAGE Could not delete 'C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary'.
!STACK 1
org.eclipse.core.runtime.CoreException: Problems encountered while deleting files.
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:141)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:316)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:802)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1784)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:762)
	at org.eclipse.ltk.core.refactoring.resource.DeleteResourceChange.perform(DeleteResourceChange.java:163)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
Contains: Could not delete: C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary.
java.nio.file.FileSystemException: C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary: The process cannot access the file because it is being used by another process
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1185)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:316)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:802)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1784)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:762)
	at org.eclipse.ltk.core.refactoring.resource.DeleteResourceChange.perform(DeleteResourceChange.java:163)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
!SUBENTRY 3 org.eclipse.core.filesystem 4 273 2022-12-25 14:35:56.086
!MESSAGE Problems encountered while deleting files.
!SUBENTRY 4 org.eclipse.core.filesystem 4 273 2022-12-25 14:35:56.086
!MESSAGE Could not delete: C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary.
!STACK 0
java.nio.file.FileSystemException: C:\Users\Asus i5\Desktop\RMT JAVA Domaci2\Rezervacija karata Server\src\server\registrovaniKorisnici.binary: The process cannot access the file because it is being used by another process
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:275)
	at java.base/sun.nio.fs.AbstractFileSystemProvider.deleteIfExists(AbstractFileSystemProvider.java:110)
	at java.base/java.nio.file.Files.deleteIfExists(Files.java:1185)
	at org.eclipse.core.internal.filesystem.local.LocalFile.internalDelete(LocalFile.java:222)
	at org.eclipse.core.internal.filesystem.local.LocalFile.delete(LocalFile.java:139)
	at org.eclipse.core.internal.resources.ResourceTree.internalDeleteFile(ResourceTree.java:316)
	at org.eclipse.core.internal.resources.ResourceTree.standardDeleteFile(ResourceTree.java:802)
	at org.eclipse.core.internal.resources.Resource.unprotectedDelete(Resource.java:1784)
	at org.eclipse.core.internal.resources.Resource.delete(Resource.java:762)
	at org.eclipse.ltk.core.refactoring.resource.DeleteResourceChange.perform(DeleteResourceChange.java:163)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.lambda$0(DynamicValidationStateChange.java:105)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:41)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:5917)
	at org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:106)
	at org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:281)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.lambda$0(PerformChangeOperation.java:258)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:295)
	at org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:94)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:219)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2313)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2338)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:89)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:122)
!SESSION 2022-12-25 16:03:26.355 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-25 16:03:55.593
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 16:03:55.593
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4738131e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3b576ee3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 16:03:55.593
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@705d914f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6212ea52,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-25 16:04:09.750
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-12-25 18:01:42.215 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-25 18:01:55.899
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 18:01:55.899
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@66716959,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@34e07e65,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 18:01:55.899
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7ca0166c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dcad16f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-25 18:02:04.794
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2022-12-25 18:29:48.879
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package server;

import java.io.*;
import server.*;
import java.net.*;
import java.util.GregorianCalendar;
import java.util.LinkedList;


public class Server extends Thread{
	
	Socket soketZaKomunikaciju;
	BufferedReader inputKlijenta;
	PrintStream outputServera;
	
	static int brojPovezanihKorisnika = 0;
	LinkedList<RegistrovanKorisnik> registrovaniKorisnici = new LinkedList<>();
	LinkedList<Rezervacija> rezervacijeObicne = new LinkedList<>();
	LinkedList<Rezervacija> rezervacijeVIP = new LinkedList<>();
	final int UKUPNO_REZERVACIJA_OBICNE = 20;
	final int UKUPNO_REZERVACIJA_VIP = 5;
	
	int preostaloObicnihKarata;
	int preostaloVIPKarata;
	
	public Server(Socket soketZaKomunikaciju) {
		this.soketZaKomunikaciju = soketZaKomunikaciju;
		start();
	}

	public static void main(String[] args) throws Exception {
		System.out.println("Server je poceo sa radom i osluskuje na portu 80..");
		
		ServerSocket serverSocket = new ServerSocket(8090);
		while(true) {
			new Server(serverSocket.accept());
			brojPovezanihKorisnika++;
			System.out.println("Prihvacen zahtev od korisnika " + brojPovezanihKorisnika);
		}
	}
	
	@Override
	public void run() {
//		Ulazno-izlazni tokovi
		try {
			inputKlijenta = new BufferedReader(new InputStreamReader(soketZaKomunikaciju.getInputStream()));
			outputServera = new PrintStream(soketZaKomunikaciju.getOutputStream());
			
			boolean registrovanKorisnik = false;
			boolean zavrsenaSesija = false;
			RegistrovanKorisnik trenutniKorisnik = null;
			
			outputServera.println("Uspesno ste se povezali na server\n\n");
			
			deserializujPodatke();
			

			int brojRezervisanihKarataPoKlijentu = 0;
			while(true && !zavrsenaSesija) {
				preostaloObicnihKarata = UKUPNO_REZERVACIJA_OBICNE - rezervacijeObicne.size();
				preostaloVIPKarata = UKUPNO_REZERVACIJA_VIP - rezervacijeVIP.size();
				
				if(registrovanKorisnik) {
					String odgovorKlijenta = registrovanKorisnikMeni(trenutniKorisnik.getIme());
					
					switch(odgovorKlijenta) {
					case "1":
						odgovorPreostaloKarataRegistrovan();
						break;
					case "2":
						if(brojRezervisanihKarataPoKlijentu < 4) {
							if(rezervacijaKarataRegistrovani(trenutniKorisnik)) {
								brojRezervisanihKarataPoKlijentu++;
								outputServera.println("\nRezervisanih do sada: " + brojRezervisanihKarataPoKlijentu);
								
								serializujPodatke();
							}
						}
						break;
					case "3":
						opcijeMojeRezervacije(trenutniKorisnik.getEmail());
						break;
					case "4":
						outputServera.println("\nUSPESNO STE SE ODJAVILI");
						registrovanKorisnik = false;
						trenutniKorisnik = null;
						break;
					case "5" :
						zavrsenaSesija = true;
						break;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
					}
				}
				else {
					String odgovorKlijenta = guestMeni();
					
					switch(odgovorKlijenta) {
					case "1" :
						odgovorPreostaloKarata();
						
						break;
					case "2" :
						if(brojRezervisanihKarataPoKlijentu < 4) {
							rezervacijaKarata(TipKarte.OBICNA_KARTA);
							
							brojRezervisanihKarataPoKlijentu++;
							outputServera.println("\nRezervisanih do sada: " + brojRezervisanihKarataPoKlijentu);
							
							serializujPodatke();
						}
						else {
							outputServera.println("\nNije moguce rezervisanje vise od 4 karte po korisniku");
						}
							
							break;
					case "3" : 
						trenutniKorisnik = registrujKorisnika();
						if(trenutniKorisnik != null)
							registrovanKorisnik = true;	
							
						serializujPodatke();
							
						break;
					case "4" :
						trenutniKorisnik = prijaviKorisnika();
						if(trenutniKorisnik != null)
						registrovanKorisnik = true;
						
						break;
					case "5" :
						zavrsenaSesija = true;
						break;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
					}
				}
				if(!zavrsenaSesija) {
					outputServera.println("\n\nPritisnite ENTER za povratak na meni\n");
					inputKlijenta.readLine();
				}
			}
			
			zavrsiSesiju();
			
			
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private boolean ispravanJMBG(String jmbg) {
		if(jmbg.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		if(jmbg.length() != 13) {
			return false;
		}
		
		for(int i = 0; i < 13; i++){
			if(jmbg.charAt(i) >= '0' && jmbg.charAt(i) <= '9')
				continue;
			else
				return false;
		}
		return true;
	}
	
	private boolean ispravnoImePrezime(String unetString) {
		if(unetString.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		
		String[] niz = unetString.split(" ");
		for(int i = 0; i < niz.length; i++) {
			for(int j = 0; j < niz[i].length(); j++) {
				if(Character.isLetter(niz[i].charAt(j)))
					continue;
				else
					return false;
			}
		}
		
		return true;
	}
	
	private boolean ispravanEmail(String email) {
		if(email.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		if(email.contains("@") && email.lastIndexOf(".") > email.indexOf("@"))
			return true;
		else
			return false;
	}
	
	private boolean ispravanPassword(String password) {
		if(password.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		if(password.length() < 8)
			return false;
		
		boolean sadrziBroj = false;
		boolean sadrziSlovo = false;
		boolean sadrziVelikoSlovo = false;
		for(int i = 0; i < password.length(); i++) {
			if(Character.isDigit(password.charAt(i)))
				sadrziBroj = true;
			
			if(Character.isLetter(password.charAt(i))) {
				sadrziSlovo = true;
			}
			
			if(Character.isUpperCase(password.charAt(i))) {
				sadrziVelikoSlovo = true;
			}
		}
		
		if(sadrziBroj && sadrziSlovo && sadrziVelikoSlovo)
			return true;
		else
			return false;
	}

	private boolean ispravanUsername(String username) {
		if(username.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		if(username.length() < 3)
			return false;
		
		for(int i = 0; i < username.length(); i++) {
			if(username.charAt(i) == ' ')
				return false;
		}
		
		return true;
	}

	private boolean postojiUsername(String username) {
		if(username.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getUsername().equals(username))
				return true;
		}
		
		return false;
	}	
	private boolean postojiEmail(String email) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getEmail().equals(email))
				return true;
		}
		
		return false;
	}	
	private boolean postojiJMBG(String jmbg) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getJmbg().equals(jmbg))
				return true;
		}
		
		return false;
	}
	private void ispisListeKorisnika() {
		if(registrovaniKorisnici.isEmpty()) {
			System.out.println("\nTRENUTNO NEMA REGISTROVANIH KORISNIKA\n\n");
			return;
		}
		System.out.println("\n\nKORISNICI:\n");
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			System.out.println(korisnik + "\n");
		}
		System.out.println("\n\n");
	}
	
	private void ispisListeRezervacija() {
		if(rezervacijeObicne.isEmpty()) {
			System.out.println("\nTRENUTNO NEMA REZERVACIJA\n\n");
			return;
		}
		System.out.println("\n\nREZERVACIJE:\n");
		for(Rezervacija rezervacija : rezervacijeObicne) {
			System.out.println(rezervacija + "\n");
		}
		System.out.println("\n\n");
	}
	
	private RegistrovanKorisnik nadjiKorisnika(String username) {
		
		for(int i = 0; i < registrovaniKorisnici.size(); i++) {
			if(registrovaniKorisnici.get(i).getUsername().equals(username))
				return registrovaniKorisnici.get(i);
		}
		
		return null;
	}

	private void serializujPodatke() {
		try {
			ObjectOutputStream korisniciOUT = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream("src/server/registrovaniKorisnici.binary")));
			ObjectOutputStream rezervacijeOUT = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream("src/server/rezervacije.binary")));
			
			for(int i = 0; i < registrovaniKorisnici.size();i++) {
				korisniciOUT.writeObject(registrovaniKorisnici.get(i));
			}
			
			for(int i = 0; i < rezervacijeObicne.size();i++) {
				rezervacijeOUT.writeObject(rezervacijeObicne.get(i));
			}
			
			for(int i = 0; i < rezervacijeVIP.size(); i++) {
				rezervacijeOUT.writeObject(rezervacijeVIP.get(i));
			}
			
			korisniciOUT.close();
			rezervacijeOUT.close();
		}catch(Exception e) {
			
		}
	}
	
	private void deserializujPodatke() {
		try {
			ObjectInputStream korisniciIN = new ObjectInputStream(new BufferedInputStream(new FileInputStream("src/server/registrovaniKorisnici.binary")));
			ObjectInputStream rezervacijeIN = new ObjectInputStream(new BufferedInputStream(new FileInputStream("src/server/rezervacije.binary")));
			
			
			registrovaniKorisnici.clear();
			rezervacijeObicne.clear();
			rezervacijeVIP.clear();
			
			try {
				while(true) {
					RegistrovanKorisnik rk = (RegistrovanKorisnik)(korisniciIN.readObject());
					if(rk != null && !registrovaniKorisnici.contains(rk))
					registrovaniKorisnici.add(rk);
				}
			} catch (EOFException e) {}
			
			try {
				while(true) {
					Rezervacija rok = (Rezervacija)(rezervacijeIN.readObject());
					if(rok != null && !rezervacijeObicne.contains(rok)) {
						if(rok.equals(TipKarte.OBICNA_KARTA))
							rezervacijeObicne.add(rok);
						else
							rezervacijeVIP.add(rok);
					}
					
				}
			} catch (EOFException e) {}
			
			korisniciIN.close();
			rezervacijeIN.close();
		}catch(Exception e) {
			
		}
	}
	
	private String guestMeni() throws Exception {
		String pocetniMeni = "============================================================\n"
				+ "\t\t\tDOBRODOSLI"
				+ "\n\n\t\t\tPOCETNI MENI\n\n"
				+ "1.Broj preostalih karata\n"
				+ "2.Rezervacija karata\n"
				+ "3.Registracija\n"
				+ "4.Prijavljivanje\n"
				+ "5.Izlaz iz aplikacije\n\n"
				+ "UNESITE BROJ ZELJENE OPCIJE(1-5):";
		
			outputServera.println(pocetniMeni);
			
			return inputKlijenta.readLine();
	}

	private String registrovanKorisnikMeni(String imeKorisnika) throws Exception {
		String pocetniMeni = "============================================================\n"
				+ "\t\t\tDOBRODOSLI " + imeKorisnika.toUpperCase()
				+ "\n\n\t\t\tPOCETNI MENI\n\n"
				+ "1.Broj preostalih karata\n"
				+ "2.Rezervacija karata\n"
				+ "3.Moje rezervacije\n"
				+ "4.Odjavite se\n"
				+ "5.Izlaz iz aplikacije\n\n"
				+ "UNESITE BROJ ZELJENE OPCIJE(1-5):";
		
			outputServera.println(pocetniMeni);
			
			return inputKlijenta.readLine();
	}
	private void zavrsiSesiju() throws IOException {
		outputServera.println("SESIJA JE ZAVRSENA");
		System.out.println("Korisnik je zavrsio svoju sesiju");
		soketZaKomunikaciju.close();
		serializujPodatke();
	}
	private void odgovorPreostaloKarata() {
		outputServera.println("============================================================\n");
		if(preostaloObicnihKarata > 0) {
			outputServera.println("\nBroj karata koji je preostao iznosi: " + preostaloObicnihKarata); 
		}
		else {
			outputServera.println("\nNema vise dostupnih karata");
		}
	}
	private void odgovorPreostaloKarataRegistrovan() {
		outputServera.println("============================================================\n");
		if(preostaloObicnihKarata > 0) {
			outputServera.println("\nBroj obicnih karata koji je preostao iznosi: " + preostaloObicnihKarata); 
		}
		else {
			outputServera.println("\nNema vise dostupnih obicnih karata");
		}
		if(preostaloVIPKarata > 0) {
			outputServera.println("\nBroj VIP karata koji je preostao iznosi: " + preostaloVIPKarata);
		}
		else {
			outputServera.println("\nNema vise dostupnih VIP karata");
		}
	}
	private void rezervacijaKarata(TipKarte tipKarte) throws IOException {
		if(preostaloObicnihKarata > 0) {
			boolean ispravanUnos = false;
			while(!ispravanUnos) {
				outputServera.println("============================================================\n"
						+ "\t\t\tREZERVACIJA KARTE(/quit za izlaz)\n"
						+ "Unesite Vase ime:"); 
				String ime = inputKlijenta.readLine();
				if(!ispravnoImePrezime(ime)) {
					outputServera.println("\nIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
					continue;
				}
				
				outputServera.println("Unesite Vase prezime: ");
				String prezime = inputKlijenta.readLine();
				if(!ispravnoImePrezime(prezime)) {
					outputServera.println("\nPREZIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
					continue;
				}
				
				outputServera.println("Unesite Vase JMBG: ");
				String jmbg = inputKlijenta.readLine();
				if(!ispravanJMBG(jmbg)) {
					outputServera.println("\nNEISPRAVAN UNOS, JMBG SADRZI SAMO BROJEVE I DUZINE JE 13 KARATAKTERA, POKUSAJTE PONOVO!");
					continue;
				}
					
				outputServera.println("Unesite Vasu email adresu: ");
				String email = inputKlijenta.readLine();
				if(!ispravanEmail(email)) {
					outputServera.println("\nNEISPRAVAN UNOS, EMAIL MORA DA SADRZI @ I DOMEN POSLE TOGA, POKUSAJTE PONOVO!");
					continue;
				}
				
				ispravanUnos = true;
				Rezervacija novaRezervacija = new Rezervacija(ime, prezime, jmbg, email, tipKarte);
				rezervacijeObicne.add(novaRezervacija);
				String tekstRezervacije = "\nREZERVACIJA br."+ rezervacijeObicne.size() + "\n\n" + novaRezervacija.toString();
				System.out.println(tekstRezervacije);
				
				
				outputServera.println("\nKARTA JE USPESNO REZERVISANA");
				
				outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
				outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
				outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
			}
		}
		else {
			outputServera.println("\nNema vise dostupnih karata");
		}
	}
	private RegistrovanKorisnik registrujKorisnika() throws IOException {
		boolean uspesnaRegistracija = false;
		while(!uspesnaRegistracija) {
			outputServera.println("============================================================\n"
					+ "\t\t\tREGISTRACIJA(/quit za izlaz)\n\n");
			
			outputServera.println("Username:");
			String username = inputKlijenta.readLine();
			if(!ispravanUsername(username)) {
				outputServera.println("\nNEISPRAVAN UNOS, USERNAME MORA DA BUDE DUZI OD 3 KARAKTERA I NE SME DA SADRZI RAZMAK, POKUSAJTE PONOVO! ");
				continue;
			}
			if(postojiUsername(username)) {
				outputServera.println("\nUSERNAME JE ZAUZET, POKUSAJTE NEKI DRUGI USERNAME! ");
				continue;
			}
			
			outputServera.println("Password:");
			String password = inputKlijenta.readLine();
			if(!ispravanPassword(password)) {
				outputServera.println("\nNEISPRAVAN UNOS, LOZINKA MORA DA BUDE DUZA OD 8 KARAKTERA I DA SADRZI MALO I VELIKO SLOVO, KAO I BROJ, POKUSAJTE PONOVO! ");
				continue;
			}
			
			outputServera.println("Ime:");
			String ime = inputKlijenta.readLine();
			if(!ispravnoImePrezime(ime)) {
				outputServera.println("\nIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
				continue;
			}
			
			outputServera.println("Prezime:");
			String prezime = inputKlijenta.readLine();
			if(!ispravnoImePrezime(prezime)) {
				outputServera.println("\nPREZIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
				continue;
			}
			
			outputServera.println("JMBG:");
			String jmbg = inputKlijenta.readLine();
			if(!ispravanJMBG(jmbg)) {
				outputServera.println("\nNEISPRAVAN UNOS, JMBG SADRZI SAMO BROJEVE I DUZINE JE 13 KARATAKTERA, POKUSAJTE PONOVO!");
				continue;
			}
			if(postojiJMBG(jmbg)) {
				outputServera.println("\nKORISNIK SA TIM JMBG-om VEC POSTOJI, POKUSAJTE OPET! ");
				continue;
			}
			
			outputServera.println("Email:");
			String email = inputKlijenta.readLine();
			if(!ispravanEmail(email)) {
				outputServera.println("\nNEISPRAVAN UNOS, EMAIL MORA DA SADRZI @ I DOMEN POSLE TOGA, POKUSAJTE PONOVO!");
				continue;
			}
			if(postojiEmail(email)) {
				outputServera.println("\nEMAIL JE VEC ISKORISCEN, POKUSAJTE NEKI DRUGI EMAIL! ");
				continue;
			}
			RegistrovanKorisnik noviKorisnik = new RegistrovanKorisnik(username, password, ime, prezime, jmbg, email);
			registrovaniKorisnici.add(noviKorisnik);
			
			outputServera.println("\n\nUSPESNO STE IZVRSILI REGISTRACIJU");
			uspesnaRegistracija = true;
			
			return noviKorisnik;
		}
		
		return null;
	}
	private RegistrovanKorisnik prijaviKorisnika() throws IOException{
		while(true) {
			outputServera.println("============================================================\n"
					+ "\t\t\tPRIJAVLJIVANJE(/quit za izlaz)\n\n");
			int brojPokusajaUsername = 3;
			int brojPokusajaLozinka = 3;
			while(brojPokusajaUsername > 0 && brojPokusajaLozinka > 0) {
				outputServera.println("Username:");
				String username = inputKlijenta.readLine();
				if(postojiUsername(username)) {
					
					
					RegistrovanKorisnik privremeni = nadjiKorisnika(username);
					while(brojPokusajaLozinka > 0) {
						outputServera.println("Password:");
						String password = inputKlijenta.readLine();
						if(privremeni.getPassword().equals(password)) {
							
							outputServera.println("\nUSPESNO STE SE PRIJAVILI");
							return privremeni;
						}
						else {
							brojPokusajaLozinka--;
							outputServera.println("NETACNA LOZIKA\nIMATE JOS " + brojPokusajaLozinka + " POKUSAJ/A");
							if(brojPokusajaLozinka == 0) {
								outputServera.println("Niste uspeli da se ulogujete");
								break;
							}
						}
					}
					
				}
				else {
					brojPokusajaUsername--;
					if(brojPokusajaUsername == 0) {
						outputServera.println("Niste uspeli da se ulogujete");
						break;
					}else
					{
						outputServera.println("NEPOSTOJECI USERNAME\nIMATE JOS " + brojPokusajaUsername + " POKUSAJ/A");
					}
				}
			}
			if(brojPokusajaUsername == 0 || brojPokusajaLozinka == 0) {
				return null;
			}
		}
	}

	private boolean rezervacijaKarataRegistrovani(RegistrovanKorisnik trenutniKorisnik) throws IOException {
		boolean rezervisano = false;
		while(!rezervisano) {
			outputServera.println("============================================================\n" + 
					"\t\t\tREZERVACIJA KARTE\n");
			
			outputServera.println("1. Rezervisi obicnu kartu");
			outputServera.println("2. Rezervisi vip kartu");
			outputServera.println("3. Povratak na meni\n");
			
			outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
			
			String odg = inputKlijenta.readLine();
			
			switch(odg) {
				case "1": 
					if(preostaloObicnihKarata > 0) {
						boolean uspesnaRezervacija = false;
						while(!uspesnaRezervacija) {
							outputServera.println("============================================================\n" + 
									"\t\t\tREZERVACIJA OBICNE KARTE\n");
							
							outputServera.println("1. Rezervisi kartu sa svojim podacima");
							outputServera.println("2. Iskoristi neke druge podatke za rezervaciju");
							outputServera.println("3. Povratak na meni\n");
							
							outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
							
							String odgovorKorisnika = inputKlijenta.readLine();
							switch(odgovorKorisnika) {
								case "1":
									boolean potvrda = false;
									while(!potvrda) {
										outputServera.println("============================================================\n" + 
												"\t\t\tDA LI STE SIGURNI\n");
										
										outputServera.println("1. DA");
										outputServera.println("2. NE\n");
										
										outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-2): ");
										
										String potvrdaKorisnika = inputKlijenta.readLine();
										
										switch(potvrdaKorisnika) {
											case "1": 
												Rezervacija novaRezervacija = new Rezervacija(trenutniKorisnik.getIme(), trenutniKorisnik.getPrezime(), trenutniKorisnik.getJmbg(), trenutniKorisnik.getEmail(), TipKarte.OBICNA_KARTA);
												rezervacijeObicne.add(novaRezervacija);
												String tekstRezervacije = "\nREZERVACIJA br."+ rezervacijeObicne.size() + "\n\n" + novaRezervacija.toString();
												System.out.println(tekstRezervacije);
												
												outputServera.println("\n\nKARTA JE USPESNO REZERVISANA");
												
												outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
												outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
												outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
												return true;
											case "2": 
												potvrda = true;
												break;
											default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
										}
									}
									break;
								case "2":
									rezervacijaKarata(TipKarte.OBICNA_KARTA);
									return true;
								case "3":
									break;
								default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
					}
					else {
						outputServera.println("\nNema vise dostupnih karata");
					}
					break;
					
				case "2": 
					if(preostaloVIPKarata > 0) {
						boolean uspesnaRezervacija = false;
						while(!uspesnaRezervacija) {
							outputServera.println("============================================================\n" + 
									"\t\t\tREZERVACIJA VIP KARTE\n");
							
							outputServera.println("1. Rezervisi kartu sa svojim podacima");
							outputServera.println("2. Iskoristi neke druge podatke za rezervaciju");
							outputServera.println("3. Povratak na meni\n");
							
							outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
							
							String odgovorKorisnika = inputKlijenta.readLine();
							switch(odgovorKorisnika) {
								case "1":
									boolean potvrda = false;
									while(!potvrda) {
										outputServera.println("============================================================\n" + 
												"\t\t\tDA LI STE SIGURNI\n");
										
										outputServera.println("1. DA");
										outputServera.println("2. NE\n");
										
										outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-2): ");
										
										String potvrdaKorisnika = inputKlijenta.readLine();
										
										switch(potvrdaKorisnika) {
											case "1": 
												Rezervacija novaRezervacija = new Rezervacija(trenutniKorisnik.getIme(), trenutniKorisnik.getPrezime(), trenutniKorisnik.getJmbg(), trenutniKorisnik.getEmail(), TipKarte.VIP_KARTA);
												rezervacijeVIP.add(novaRezervacija);
												String tekstRezervacije = "\nREZERVACIJA br."+ rezervacijeObicne.size() + "\n\n" + novaRezervacija.toString();
												System.out.println(tekstRezervacije);
												
												outputServera.println("\n\nKARTA JE USPESNO REZERVISANA");
												
												outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
												outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
												outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
												return true;
											case "2": 
												potvrda = true;
												break;
											default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
										}
									}
									break;
								case "2":
									rezervacijaKarata(TipKarte.VIP_KARTA);
									return true;
								case "3":
									break;
								default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
					}
					else {
						outputServera.println("\nNema vise dostupnih VIP karata");
					}
					break;
			}
		}
		
		
		return false;
		
	}

	private void opcijeMojeRezervacije(String email) throws IOException {
		int brojac;
		LinkedList<Rezervacija> rezervacijeKorisnika = new LinkedList<>();
		
		for(int i = 0; i < rezervacijeObicne.size(); i++) {
			if(rezervacijeObicne.get(i).getEmail().equals(email))
				rezervacijeKorisnika.add(rezervacijeObicne.get(i));
		}
		
		for(int i = 0; i < rezervacijeVIP.size(); i++) {
			if(rezervacijeVIP.get(i).getEmail().equals(email))
				rezervacijeKorisnika.add(rezervacijeVIP.get(i));
		}
		
		if(rezervacijeKorisnika.isEmpty()) {
			outputServera.println("Trenutno nemate nijednu rezervaciju na Vasu mejl adresu");
			return;
		}
		else {
			for(brojac = 0; brojac < rezervacijeKorisnika.size(); brojac++) {
				outputServera.println((brojac + 1) + ". " + rezervacijeKorisnika.get(brojac));
			}
			boolean uspesnaObrada = false;
			while(!uspesnaObrada) {
				outputServera.println("\nObrisati rezervaciju (DA/NE): ");
				String odgovorKlijenta = inputKlijenta.readLine().toLowerCase();
				switch(odgovorKlijenta) {
					case "da": 
						while(true) {
							outputServera.println("\nUnesite broj redni broj rezervacije koju zelite da obrisete: ");
							int brojRezervacije = Integer.parseInt(inputKlijenta.readLine());
							if(brojRezervacije > 0 && brojRezervacije < rezervacijeKorisnika.size()) {
								Rezervacija izbrisanaRezervacija = rezervacijeKorisnika.remove(brojRezervacije - 1)
								if(izbrisanaRezervacija.getTipKarte().equals(TipKarte.OBICNA_KARTA)) {
									rezervacijeObicne.remove(izbrisanaRezervacija);
								}
								else {
									brojRezervacije - 1
								}
								outputServera.println("\nUspesno obrisana rezervacija br." + brojRezervacije);
								break;
							}
							else {
								outputServera.println("\nIzabrali ste nepostojeci broj rezervacije, pokusajte ponovo");
							}
						}
						break;
					case "ne":
						return;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
				}
			}
			
		}
		
		
		
		
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2216)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-12-25 18:29:48.887
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2216)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-12-25 18:29:48.969
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2216)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-12-25 18:29:49.004
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package server;

import java.io.*;
import server.*;
import java.net.*;
import java.util.GregorianCalendar;
import java.util.LinkedList;


public class Server extends Thread{
	
	Socket soketZaKomunikaciju;
	BufferedReader inputKlijenta;
	PrintStream outputServera;
	
	static int brojPovezanihKorisnika = 0;
	LinkedList<RegistrovanKorisnik> registrovaniKorisnici = new LinkedList<>();
	LinkedList<Rezervacija> rezervacijeObicne = new LinkedList<>();
	LinkedList<Rezervacija> rezervacijeVIP = new LinkedList<>();
	final int UKUPNO_REZERVACIJA_OBICNE = 20;
	final int UKUPNO_REZERVACIJA_VIP = 5;
	
	int preostaloObicnihKarata;
	int preostaloVIPKarata;
	
	public Server(Socket soketZaKomunikaciju) {
		this.soketZaKomunikaciju = soketZaKomunikaciju;
		start();
	}

	public static void main(String[] args) throws Exception {
		System.out.println("Server je poceo sa radom i osluskuje na portu 80..");
		
		ServerSocket serverSocket = new ServerSocket(8090);
		while(true) {
			new Server(serverSocket.accept());
			brojPovezanihKorisnika++;
			System.out.println("Prihvacen zahtev od korisnika " + brojPovezanihKorisnika);
		}
	}
	
	@Override
	public void run() {
//		Ulazno-izlazni tokovi
		try {
			inputKlijenta = new BufferedReader(new InputStreamReader(soketZaKomunikaciju.getInputStream()));
			outputServera = new PrintStream(soketZaKomunikaciju.getOutputStream());
			
			boolean registrovanKorisnik = false;
			boolean zavrsenaSesija = false;
			RegistrovanKorisnik trenutniKorisnik = null;
			
			outputServera.println("Uspesno ste se povezali na server\n\n");
			
			deserializujPodatke();
			

			int brojRezervisanihKarataPoKlijentu = 0;
			while(true && !zavrsenaSesija) {
				preostaloObicnihKarata = UKUPNO_REZERVACIJA_OBICNE - rezervacijeObicne.size();
				preostaloVIPKarata = UKUPNO_REZERVACIJA_VIP - rezervacijeVIP.size();
				
				if(registrovanKorisnik) {
					String odgovorKlijenta = registrovanKorisnikMeni(trenutniKorisnik.getIme());
					
					switch(odgovorKlijenta) {
					case "1":
						odgovorPreostaloKarataRegistrovan();
						break;
					case "2":
						if(brojRezervisanihKarataPoKlijentu < 4) {
							if(rezervacijaKarataRegistrovani(trenutniKorisnik)) {
								brojRezervisanihKarataPoKlijentu++;
								outputServera.println("\nRezervisanih do sada: " + brojRezervisanihKarataPoKlijentu);
								
								serializujPodatke();
							}
						}
						break;
					case "3":
						opcijeMojeRezervacije(trenutniKorisnik.getEmail());
						break;
					case "4":
						outputServera.println("\nUSPESNO STE SE ODJAVILI");
						registrovanKorisnik = false;
						trenutniKorisnik = null;
						break;
					case "5" :
						zavrsenaSesija = true;
						break;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
					}
				}
				else {
					String odgovorKlijenta = guestMeni();
					
					switch(odgovorKlijenta) {
					case "1" :
						odgovorPreostaloKarata();
						
						break;
					case "2" :
						if(brojRezervisanihKarataPoKlijentu < 4) {
							rezervacijaKarata(TipKarte.OBICNA_KARTA);
							
							brojRezervisanihKarataPoKlijentu++;
							outputServera.println("\nRezervisanih do sada: " + brojRezervisanihKarataPoKlijentu);
							
							serializujPodatke();
						}
						else {
							outputServera.println("\nNije moguce rezervisanje vise od 4 karte po korisniku");
						}
							
							break;
					case "3" : 
						trenutniKorisnik = registrujKorisnika();
						if(trenutniKorisnik != null)
							registrovanKorisnik = true;	
							
						serializujPodatke();
							
						break;
					case "4" :
						trenutniKorisnik = prijaviKorisnika();
						if(trenutniKorisnik != null)
						registrovanKorisnik = true;
						
						break;
					case "5" :
						zavrsenaSesija = true;
						break;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
					}
				}
				if(!zavrsenaSesija) {
					outputServera.println("\n\nPritisnite ENTER za povratak na meni\n");
					inputKlijenta.readLine();
				}
			}
			
			zavrsiSesiju();
			
			
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private boolean ispravanJMBG(String jmbg) {
		if(jmbg.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		if(jmbg.length() != 13) {
			return false;
		}
		
		for(int i = 0; i < 13; i++){
			if(jmbg.charAt(i) >= '0' && jmbg.charAt(i) <= '9')
				continue;
			else
				return false;
		}
		return true;
	}
	
	private boolean ispravnoImePrezime(String unetString) {
		if(unetString.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		
		String[] niz = unetString.split(" ");
		for(int i = 0; i < niz.length; i++) {
			for(int j = 0; j < niz[i].length(); j++) {
				if(Character.isLetter(niz[i].charAt(j)))
					continue;
				else
					return false;
			}
		}
		
		return true;
	}
	
	private boolean ispravanEmail(String email) {
		if(email.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		if(email.contains("@") && email.lastIndexOf(".") > email.indexOf("@"))
			return true;
		else
			return false;
	}
	
	private boolean ispravanPassword(String password) {
		if(password.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		if(password.length() < 8)
			return false;
		
		boolean sadrziBroj = false;
		boolean sadrziSlovo = false;
		boolean sadrziVelikoSlovo = false;
		for(int i = 0; i < password.length(); i++) {
			if(Character.isDigit(password.charAt(i)))
				sadrziBroj = true;
			
			if(Character.isLetter(password.charAt(i))) {
				sadrziSlovo = true;
			}
			
			if(Character.isUpperCase(password.charAt(i))) {
				sadrziVelikoSlovo = true;
			}
		}
		
		if(sadrziBroj && sadrziSlovo && sadrziVelikoSlovo)
			return true;
		else
			return false;
	}

	private boolean ispravanUsername(String username) {
		if(username.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		if(username.length() < 3)
			return false;
		
		for(int i = 0; i < username.length(); i++) {
			if(username.charAt(i) == ' ')
				return false;
		}
		
		return true;
	}

	private boolean postojiUsername(String username) {
		if(username.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getUsername().equals(username))
				return true;
		}
		
		return false;
	}	
	private boolean postojiEmail(String email) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getEmail().equals(email))
				return true;
		}
		
		return false;
	}	
	private boolean postojiJMBG(String jmbg) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getJmbg().equals(jmbg))
				return true;
		}
		
		return false;
	}
	private void ispisListeKorisnika() {
		if(registrovaniKorisnici.isEmpty()) {
			System.out.println("\nTRENUTNO NEMA REGISTROVANIH KORISNIKA\n\n");
			return;
		}
		System.out.println("\n\nKORISNICI:\n");
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			System.out.println(korisnik + "\n");
		}
		System.out.println("\n\n");
	}
	
	private void ispisListeRezervacija() {
		if(rezervacijeObicne.isEmpty()) {
			System.out.println("\nTRENUTNO NEMA REZERVACIJA\n\n");
			return;
		}
		System.out.println("\n\nREZERVACIJE:\n");
		for(Rezervacija rezervacija : rezervacijeObicne) {
			System.out.println(rezervacija + "\n");
		}
		System.out.println("\n\n");
	}
	
	private RegistrovanKorisnik nadjiKorisnika(String username) {
		
		for(int i = 0; i < registrovaniKorisnici.size(); i++) {
			if(registrovaniKorisnici.get(i).getUsername().equals(username))
				return registrovaniKorisnici.get(i);
		}
		
		return null;
	}

	private void serializujPodatke() {
		try {
			ObjectOutputStream korisniciOUT = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream("src/server/registrovaniKorisnici.binary")));
			ObjectOutputStream rezervacijeOUT = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream("src/server/rezervacije.binary")));
			
			for(int i = 0; i < registrovaniKorisnici.size();i++) {
				korisniciOUT.writeObject(registrovaniKorisnici.get(i));
			}
			
			for(int i = 0; i < rezervacijeObicne.size();i++) {
				rezervacijeOUT.writeObject(rezervacijeObicne.get(i));
			}
			
			for(int i = 0; i < rezervacijeVIP.size(); i++) {
				rezervacijeOUT.writeObject(rezervacijeVIP.get(i));
			}
			
			korisniciOUT.close();
			rezervacijeOUT.close();
		}catch(Exception e) {
			
		}
	}
	
	private void deserializujPodatke() {
		try {
			ObjectInputStream korisniciIN = new ObjectInputStream(new BufferedInputStream(new FileInputStream("src/server/registrovaniKorisnici.binary")));
			ObjectInputStream rezervacijeIN = new ObjectInputStream(new BufferedInputStream(new FileInputStream("src/server/rezervacije.binary")));
			
			
			registrovaniKorisnici.clear();
			rezervacijeObicne.clear();
			rezervacijeVIP.clear();
			
			try {
				while(true) {
					RegistrovanKorisnik rk = (RegistrovanKorisnik)(korisniciIN.readObject());
					if(rk != null && !registrovaniKorisnici.contains(rk))
					registrovaniKorisnici.add(rk);
				}
			} catch (EOFException e) {}
			
			try {
				while(true) {
					Rezervacija rok = (Rezervacija)(rezervacijeIN.readObject());
					if(rok != null && !rezervacijeObicne.contains(rok)) {
						if(rok.equals(TipKarte.OBICNA_KARTA))
							rezervacijeObicne.add(rok);
						else
							rezervacijeVIP.add(rok);
					}
					
				}
			} catch (EOFException e) {}
			
			korisniciIN.close();
			rezervacijeIN.close();
		}catch(Exception e) {
			
		}
	}
	
	private String guestMeni() throws Exception {
		String pocetniMeni = "============================================================\n"
				+ "\t\t\tDOBRODOSLI"
				+ "\n\n\t\t\tPOCETNI MENI\n\n"
				+ "1.Broj preostalih karata\n"
				+ "2.Rezervacija karata\n"
				+ "3.Registracija\n"
				+ "4.Prijavljivanje\n"
				+ "5.Izlaz iz aplikacije\n\n"
				+ "UNESITE BROJ ZELJENE OPCIJE(1-5):";
		
			outputServera.println(pocetniMeni);
			
			return inputKlijenta.readLine();
	}

	private String registrovanKorisnikMeni(String imeKorisnika) throws Exception {
		String pocetniMeni = "============================================================\n"
				+ "\t\t\tDOBRODOSLI " + imeKorisnika.toUpperCase()
				+ "\n\n\t\t\tPOCETNI MENI\n\n"
				+ "1.Broj preostalih karata\n"
				+ "2.Rezervacija karata\n"
				+ "3.Moje rezervacije\n"
				+ "4.Odjavite se\n"
				+ "5.Izlaz iz aplikacije\n\n"
				+ "UNESITE BROJ ZELJENE OPCIJE(1-5):";
		
			outputServera.println(pocetniMeni);
			
			return inputKlijenta.readLine();
	}
	private void zavrsiSesiju() throws IOException {
		outputServera.println("SESIJA JE ZAVRSENA");
		System.out.println("Korisnik je zavrsio svoju sesiju");
		soketZaKomunikaciju.close();
		serializujPodatke();
	}
	private void odgovorPreostaloKarata() {
		outputServera.println("============================================================\n");
		if(preostaloObicnihKarata > 0) {
			outputServera.println("\nBroj karata koji je preostao iznosi: " + preostaloObicnihKarata); 
		}
		else {
			outputServera.println("\nNema vise dostupnih karata");
		}
	}
	private void odgovorPreostaloKarataRegistrovan() {
		outputServera.println("============================================================\n");
		if(preostaloObicnihKarata > 0) {
			outputServera.println("\nBroj obicnih karata koji je preostao iznosi: " + preostaloObicnihKarata); 
		}
		else {
			outputServera.println("\nNema vise dostupnih obicnih karata");
		}
		if(preostaloVIPKarata > 0) {
			outputServera.println("\nBroj VIP karata koji je preostao iznosi: " + preostaloVIPKarata);
		}
		else {
			outputServera.println("\nNema vise dostupnih VIP karata");
		}
	}
	private void rezervacijaKarata(TipKarte tipKarte) throws IOException {
		if(preostaloObicnihKarata > 0) {
			boolean ispravanUnos = false;
			while(!ispravanUnos) {
				outputServera.println("============================================================\n"
						+ "\t\t\tREZERVACIJA KARTE(/quit za izlaz)\n"
						+ "Unesite Vase ime:"); 
				String ime = inputKlijenta.readLine();
				if(!ispravnoImePrezime(ime)) {
					outputServera.println("\nIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
					continue;
				}
				
				outputServera.println("Unesite Vase prezime: ");
				String prezime = inputKlijenta.readLine();
				if(!ispravnoImePrezime(prezime)) {
					outputServera.println("\nPREZIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
					continue;
				}
				
				outputServera.println("Unesite Vase JMBG: ");
				String jmbg = inputKlijenta.readLine();
				if(!ispravanJMBG(jmbg)) {
					outputServera.println("\nNEISPRAVAN UNOS, JMBG SADRZI SAMO BROJEVE I DUZINE JE 13 KARATAKTERA, POKUSAJTE PONOVO!");
					continue;
				}
					
				outputServera.println("Unesite Vasu email adresu: ");
				String email = inputKlijenta.readLine();
				if(!ispravanEmail(email)) {
					outputServera.println("\nNEISPRAVAN UNOS, EMAIL MORA DA SADRZI @ I DOMEN POSLE TOGA, POKUSAJTE PONOVO!");
					continue;
				}
				
				ispravanUnos = true;
				Rezervacija novaRezervacija = new Rezervacija(ime, prezime, jmbg, email, tipKarte);
				rezervacijeObicne.add(novaRezervacija);
				String tekstRezervacije = "\nREZERVACIJA br."+ rezervacijeObicne.size() + "\n\n" + novaRezervacija.toString();
				System.out.println(tekstRezervacije);
				
				
				outputServera.println("\nKARTA JE USPESNO REZERVISANA");
				
				outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
				outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
				outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
			}
		}
		else {
			outputServera.println("\nNema vise dostupnih karata");
		}
	}
	private RegistrovanKorisnik registrujKorisnika() throws IOException {
		boolean uspesnaRegistracija = false;
		while(!uspesnaRegistracija) {
			outputServera.println("============================================================\n"
					+ "\t\t\tREGISTRACIJA(/quit za izlaz)\n\n");
			
			outputServera.println("Username:");
			String username = inputKlijenta.readLine();
			if(!ispravanUsername(username)) {
				outputServera.println("\nNEISPRAVAN UNOS, USERNAME MORA DA BUDE DUZI OD 3 KARAKTERA I NE SME DA SADRZI RAZMAK, POKUSAJTE PONOVO! ");
				continue;
			}
			if(postojiUsername(username)) {
				outputServera.println("\nUSERNAME JE ZAUZET, POKUSAJTE NEKI DRUGI USERNAME! ");
				continue;
			}
			
			outputServera.println("Password:");
			String password = inputKlijenta.readLine();
			if(!ispravanPassword(password)) {
				outputServera.println("\nNEISPRAVAN UNOS, LOZINKA MORA DA BUDE DUZA OD 8 KARAKTERA I DA SADRZI MALO I VELIKO SLOVO, KAO I BROJ, POKUSAJTE PONOVO! ");
				continue;
			}
			
			outputServera.println("Ime:");
			String ime = inputKlijenta.readLine();
			if(!ispravnoImePrezime(ime)) {
				outputServera.println("\nIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
				continue;
			}
			
			outputServera.println("Prezime:");
			String prezime = inputKlijenta.readLine();
			if(!ispravnoImePrezime(prezime)) {
				outputServera.println("\nPREZIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
				continue;
			}
			
			outputServera.println("JMBG:");
			String jmbg = inputKlijenta.readLine();
			if(!ispravanJMBG(jmbg)) {
				outputServera.println("\nNEISPRAVAN UNOS, JMBG SADRZI SAMO BROJEVE I DUZINE JE 13 KARATAKTERA, POKUSAJTE PONOVO!");
				continue;
			}
			if(postojiJMBG(jmbg)) {
				outputServera.println("\nKORISNIK SA TIM JMBG-om VEC POSTOJI, POKUSAJTE OPET! ");
				continue;
			}
			
			outputServera.println("Email:");
			String email = inputKlijenta.readLine();
			if(!ispravanEmail(email)) {
				outputServera.println("\nNEISPRAVAN UNOS, EMAIL MORA DA SADRZI @ I DOMEN POSLE TOGA, POKUSAJTE PONOVO!");
				continue;
			}
			if(postojiEmail(email)) {
				outputServera.println("\nEMAIL JE VEC ISKORISCEN, POKUSAJTE NEKI DRUGI EMAIL! ");
				continue;
			}
			RegistrovanKorisnik noviKorisnik = new RegistrovanKorisnik(username, password, ime, prezime, jmbg, email);
			registrovaniKorisnici.add(noviKorisnik);
			
			outputServera.println("\n\nUSPESNO STE IZVRSILI REGISTRACIJU");
			uspesnaRegistracija = true;
			
			return noviKorisnik;
		}
		
		return null;
	}
	private RegistrovanKorisnik prijaviKorisnika() throws IOException{
		while(true) {
			outputServera.println("============================================================\n"
					+ "\t\t\tPRIJAVLJIVANJE(/quit za izlaz)\n\n");
			int brojPokusajaUsername = 3;
			int brojPokusajaLozinka = 3;
			while(brojPokusajaUsername > 0 && brojPokusajaLozinka > 0) {
				outputServera.println("Username:");
				String username = inputKlijenta.readLine();
				if(postojiUsername(username)) {
					
					
					RegistrovanKorisnik privremeni = nadjiKorisnika(username);
					while(brojPokusajaLozinka > 0) {
						outputServera.println("Password:");
						String password = inputKlijenta.readLine();
						if(privremeni.getPassword().equals(password)) {
							
							outputServera.println("\nUSPESNO STE SE PRIJAVILI");
							return privremeni;
						}
						else {
							brojPokusajaLozinka--;
							outputServera.println("NETACNA LOZIKA\nIMATE JOS " + brojPokusajaLozinka + " POKUSAJ/A");
							if(brojPokusajaLozinka == 0) {
								outputServera.println("Niste uspeli da se ulogujete");
								break;
							}
						}
					}
					
				}
				else {
					brojPokusajaUsername--;
					if(brojPokusajaUsername == 0) {
						outputServera.println("Niste uspeli da se ulogujete");
						break;
					}else
					{
						outputServera.println("NEPOSTOJECI USERNAME\nIMATE JOS " + brojPokusajaUsername + " POKUSAJ/A");
					}
				}
			}
			if(brojPokusajaUsername == 0 || brojPokusajaLozinka == 0) {
				return null;
			}
		}
	}

	private boolean rezervacijaKarataRegistrovani(RegistrovanKorisnik trenutniKorisnik) throws IOException {
		boolean rezervisano = false;
		while(!rezervisano) {
			outputServera.println("============================================================\n" + 
					"\t\t\tREZERVACIJA KARTE\n");
			
			outputServera.println("1. Rezervisi obicnu kartu");
			outputServera.println("2. Rezervisi vip kartu");
			outputServera.println("3. Povratak na meni\n");
			
			outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
			
			String odg = inputKlijenta.readLine();
			
			switch(odg) {
				case "1": 
					if(preostaloObicnihKarata > 0) {
						boolean uspesnaRezervacija = false;
						while(!uspesnaRezervacija) {
							outputServera.println("============================================================\n" + 
									"\t\t\tREZERVACIJA OBICNE KARTE\n");
							
							outputServera.println("1. Rezervisi kartu sa svojim podacima");
							outputServera.println("2. Iskoristi neke druge podatke za rezervaciju");
							outputServera.println("3. Povratak na meni\n");
							
							outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
							
							String odgovorKorisnika = inputKlijenta.readLine();
							switch(odgovorKorisnika) {
								case "1":
									boolean potvrda = false;
									while(!potvrda) {
										outputServera.println("============================================================\n" + 
												"\t\t\tDA LI STE SIGURNI\n");
										
										outputServera.println("1. DA");
										outputServera.println("2. NE\n");
										
										outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-2): ");
										
										String potvrdaKorisnika = inputKlijenta.readLine();
										
										switch(potvrdaKorisnika) {
											case "1": 
												Rezervacija novaRezervacija = new Rezervacija(trenutniKorisnik.getIme(), trenutniKorisnik.getPrezime(), trenutniKorisnik.getJmbg(), trenutniKorisnik.getEmail(), TipKarte.OBICNA_KARTA);
												rezervacijeObicne.add(novaRezervacija);
												String tekstRezervacije = "\nREZERVACIJA br."+ rezervacijeObicne.size() + "\n\n" + novaRezervacija.toString();
												System.out.println(tekstRezervacije);
												
												outputServera.println("\n\nKARTA JE USPESNO REZERVISANA");
												
												outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
												outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
												outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
												return true;
											case "2": 
												potvrda = true;
												break;
											default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
										}
									}
									break;
								case "2":
									rezervacijaKarata(TipKarte.OBICNA_KARTA);
									return true;
								case "3":
									break;
								default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
					}
					else {
						outputServera.println("\nNema vise dostupnih karata");
					}
					break;
					
				case "2": 
					if(preostaloVIPKarata > 0) {
						boolean uspesnaRezervacija = false;
						while(!uspesnaRezervacija) {
							outputServera.println("============================================================\n" + 
									"\t\t\tREZERVACIJA VIP KARTE\n");
							
							outputServera.println("1. Rezervisi kartu sa svojim podacima");
							outputServera.println("2. Iskoristi neke druge podatke za rezervaciju");
							outputServera.println("3. Povratak na meni\n");
							
							outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
							
							String odgovorKorisnika = inputKlijenta.readLine();
							switch(odgovorKorisnika) {
								case "1":
									boolean potvrda = false;
									while(!potvrda) {
										outputServera.println("============================================================\n" + 
												"\t\t\tDA LI STE SIGURNI\n");
										
										outputServera.println("1. DA");
										outputServera.println("2. NE\n");
										
										outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-2): ");
										
										String potvrdaKorisnika = inputKlijenta.readLine();
										
										switch(potvrdaKorisnika) {
											case "1": 
												Rezervacija novaRezervacija = new Rezervacija(trenutniKorisnik.getIme(), trenutniKorisnik.getPrezime(), trenutniKorisnik.getJmbg(), trenutniKorisnik.getEmail(), TipKarte.VIP_KARTA);
												rezervacijeVIP.add(novaRezervacija);
												String tekstRezervacije = "\nREZERVACIJA br."+ rezervacijeObicne.size() + "\n\n" + novaRezervacija.toString();
												System.out.println(tekstRezervacije);
												
												outputServera.println("\n\nKARTA JE USPESNO REZERVISANA");
												
												outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
												outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
												outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
												return true;
											case "2": 
												potvrda = true;
												break;
											default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
										}
									}
									break;
								case "2":
									rezervacijaKarata(TipKarte.VIP_KARTA);
									return true;
								case "3":
									break;
								default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
					}
					else {
						outputServera.println("\nNema vise dostupnih VIP karata");
					}
					break;
			}
		}
		
		
		return false;
		
	}

	private void opcijeMojeRezervacije(String email) throws IOException {
		int brojac;
		LinkedList<Rezervacija> rezervacijeKorisnika = new LinkedList<>();
		
		for(int i = 0; i < rezervacijeObicne.size(); i++) {
			if(rezervacijeObicne.get(i).getEmail().equals(email))
				rezervacijeKorisnika.add(rezervacijeObicne.get(i));
		}
		
		for(int i = 0; i < rezervacijeVIP.size(); i++) {
			if(rezervacijeVIP.get(i).getEmail().equals(email))
				rezervacijeKorisnika.add(rezervacijeVIP.get(i));
		}
		
		if(rezervacijeKorisnika.isEmpty()) {
			outputServera.println("Trenutno nemate nijednu rezervaciju na Vasu mejl adresu");
			return;
		}
		else {
			for(brojac = 0; brojac < rezervacijeKorisnika.size(); brojac++) {
				outputServera.println((brojac + 1) + ". " + rezervacijeKorisnika.get(brojac));
			}
			boolean uspesnaObrada = false;
			while(!uspesnaObrada) {
				outputServera.println("\nObrisati rezervaciju (DA/NE): ");
				String odgovorKlijenta = inputKlijenta.readLine().toLowerCase();
				switch(odgovorKlijenta) {
					case "da": 
						while(true) {
							outputServera.println("\nUnesite broj redni broj rezervacije koju zelite da obrisete: ");
							int brojRezervacije = Integer.parseInt(inputKlijenta.readLine());
							if(brojRezervacije > 0 && brojRezervacije < rezervacijeKorisnika.size()) {
								Rezervacija izbrisanaRezervacija = rezervacijeKorisnika.remove(brojRezervacije - 1)
								if(izbrisanaRezervacija.getTipKarte().equals(TipKarte.OBICNA_KARTA)) {
									rezervacijeObicne.remove(izbrisanaRezervacija);
								}
								else {
									brojRezervacije - 1
								}
								outputServera.println("\nUspesno obrisana rezervacija br." + brojRezervacije);
								break;
							}
							else {
								outputServera.println("\nIzabrali ste nepostojeci broj rezervacije, pokusajte ponovo");
							}
						}
						break;
					case "ne":
						return;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
				}
			}
			
		}
		
		
		
		
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2216)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.findEnumConstructorTarget(JavaElementHyperlinkDetector.java:299)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.detectHyperlinks(JavaElementHyperlinkDetector.java:115)
	at org.eclipse.ui.texteditor.HyperlinkDetectorRegistry$HyperlinkDetectorDelegate.detectHyperlinks(HyperlinkDetectorRegistry.java:81)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:289)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:262)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseMove(HyperlinkManager.java:457)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4237)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4054)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1041)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-12-25 18:29:49.022
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2216)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.findEnumConstructorTarget(JavaElementHyperlinkDetector.java:299)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.detectHyperlinks(JavaElementHyperlinkDetector.java:115)
	at org.eclipse.ui.texteditor.HyperlinkDetectorRegistry$HyperlinkDetectorDelegate.detectHyperlinks(HyperlinkDetectorRegistry.java:81)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:289)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:262)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseMove(HyperlinkManager.java:457)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4237)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4054)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1041)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-12-25 18:29:49.024
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2221)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2216)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2996)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.findEnumConstructorTarget(JavaElementHyperlinkDetector.java:299)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaElementHyperlinkDetector.detectHyperlinks(JavaElementHyperlinkDetector.java:115)
	at org.eclipse.ui.texteditor.HyperlinkDetectorRegistry$HyperlinkDetectorDelegate.detectHyperlinks(HyperlinkDetectorRegistry.java:81)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:289)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.findHyperlinks(HyperlinkManager.java:262)
	at org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseMove(HyperlinkManager.java:457)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:216)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4237)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1060)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4054)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3626)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1150)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1041)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SESSION 2022-12-25 18:57:54.017 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-12-25 18:58:23.351
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 18:58:23.351
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@554d040d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3fe24670,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 18:58:23.351
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3c46e6f6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7d6019d5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-25 18:58:33.526
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2022-12-25 20:27:51.999
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package server;

import java.io.*;
import java.net.*;
import java.util.LinkedList;


public class Server extends Thread{
	
	Socket soketZaKomunikaciju;
	BufferedReader inputKlijenta;
	PrintStream outputServera;
	
	static int brojPovezanihKorisnika = 0;
	LinkedList<RegistrovanKorisnik> registrovaniKorisnici = new LinkedList<>();
	LinkedList<Rezervacija> rezervacijeObicne = new LinkedList<>();
	LinkedList<Rezervacija> rezervacijeVIP = new LinkedList<>();
	final int UKUPNO_REZERVACIJA_OBICNE = 20;
	final int UKUPNO_REZERVACIJA_VIP = 5;
	
	int preostaloObicnihKarata;
	int preostaloVIPKarata;
	
	public Server(Socket soketZaKomunikaciju) {
		this.soketZaKomunikaciju = soketZaKomunikaciju;
		start();
	}

	public static void main(String[] args) {
		try{
			System.out.println("Server je poceo sa radom i osluskuje na portu 8090..");
			
			ServerSocket serverSocket = new ServerSocket(8090);
			serverSocket.setSoTimeout(10000);
			while(true) {
				new Server(serverSocket.accept());
				brojPovezanihKorisnika++;
				System.out.println("\nPrihvacen zahtev od korisnika " );
				System.out.println("Trenutno povezano: " + brojPovezanihKorisnika + " korisnik/a");
			}
			serverSocket/cl
			
		}catch (BindException e) {
			System.out.println("SERVER RADI, NE MOZETE GA POKRENUTI PONOVO");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	@Override
	public void run() {
//		Ulazno-izlazni tokovi
		try {
			inputKlijenta = new BufferedReader(new InputStreamReader(soketZaKomunikaciju.getInputStream()));
			outputServera = new PrintStream(soketZaKomunikaciju.getOutputStream());
			
			boolean registrovanKorisnik = false;
			boolean zavrsenaSesija = false;
			RegistrovanKorisnik trenutniKorisnik = null;
			
			outputServera.println("Uspesno ste se povezali na server\n\n");
			
			deserializujPodatke();
			

			int brojRezervisanihKarataPoKlijentu = 0;
			while(true && !zavrsenaSesija) {
				preostaloObicnihKarata = UKUPNO_REZERVACIJA_OBICNE - rezervacijeObicne.size();
				preostaloVIPKarata = UKUPNO_REZERVACIJA_VIP - rezervacijeVIP.size();
				
				if(registrovanKorisnik) {
					String odgovorKlijenta = registrovanKorisnikMeni(trenutniKorisnik.getIme());
					
					switch(odgovorKlijenta) {
					case "1":
						odgovorPreostaloKarataRegistrovan();
						break;
					case "2":
						if(brojRezervisanihKarataPoKlijentu < 4) {
							if(rezervacijaKarataRegistrovani(trenutniKorisnik)) {
								brojRezervisanihKarataPoKlijentu++;
								outputServera.println("\nRezervisanih do sada: " + brojRezervisanihKarataPoKlijentu);
								
								serializujPodatke();
							}
						}
						break;
					case "3":
						opcijeMojeRezervacije(trenutniKorisnik.getEmail());
						break;
					case "4":
						boolean uspesnaOdjava = false;
						while(!uspesnaOdjava) {
							outputServera.println("\nDa li ste sigurni(da/ne):");
							String reply = inputKlijenta.readLine().toLowerCase();
							switch(reply) {
							case "da":
								outputServera.println("\nUSPESNO STE SE ODJAVILI");
								registrovanKorisnik = false;
								trenutniKorisnik = null;
								uspesnaOdjava = true;
								break;
							case "ne":
								uspesnaOdjava = true;
								break;
							default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
						
						break;
					case "5" :
						zavrsenaSesija = true;
						break;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
					}
				}
				else {
					String odgovorKlijenta = guestMeni();
					
					switch(odgovorKlijenta) {
					case "1" :
						odgovorPreostaloKarata();
						
						break;
					case "2" :
						if(brojRezervisanihKarataPoKlijentu < 4) {
							
							if(rezervacijaKarata(TipKarte.OBICNA_KARTA)) {
								brojRezervisanihKarataPoKlijentu++;
								outputServera.println("\nRezervisanih do sada: " + brojRezervisanihKarataPoKlijentu);
								
								serializujPodatke();
							}
						}
						else {
							outputServera.println("\nNije moguce rezervisanje vise od 4 karte po korisniku");
						}
							
							break;
					case "3" : 
						trenutniKorisnik = registrujKorisnika();
						if(trenutniKorisnik != null)
							registrovanKorisnik = true;	
							
						serializujPodatke();
							
						break;
					case "4" :
						trenutniKorisnik = prijaviKorisnika();
						if(trenutniKorisnik != null)
						registrovanKorisnik = true;
						
						break;
					case "5" :
						zavrsenaSesija = true;
						break;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
					}
				}
				if(!zavrsenaSesija) {
					outputServera.println("\n\nPritisnite ENTER za povratak na meni\n");
					inputKlijenta.readLine();
				}
			}
			
			zavrsiSesiju();
			
			
		}
		catch(SocketException e) {
			System.out.println("Korisnik se iznenando prekinuo konekciju");
			brojPovezanihKorisnika--;
		}
		catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private boolean ispravanJMBG(String jmbg) {
		if(jmbg.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		if(jmbg.length() != 13) {
			return false;
		}
		
		for(int i = 0; i < 13; i++){
			if(jmbg.charAt(i) >= '0' && jmbg.charAt(i) <= '9')
				continue;
			else
				return false;
		}
		return true;
	}
	
	private boolean ispravnoImePrezime(String unetString) {
		String[] niz = unetString.split(" ");
		for(int i = 0; i < niz.length; i++) {
			for(int j = 0; j < niz[i].length(); j++) {
				if(Character.isLetter(niz[i].charAt(j)))
					continue;
				else
					return false;
			}
		}
		
		return true;
	}
	
	private boolean ispravanEmail(String email) {
		if(email.contains("@") && email.lastIndexOf(".") > email.indexOf("@"))
			return true;
		else
			return false;
	}
	
	private boolean ispravanPassword(String password) {
		if(password.length() < 8)
			return false;
		
		boolean sadrziBroj = false;
		boolean sadrziSlovo = false;
		boolean sadrziVelikoSlovo = false;
		for(int i = 0; i < password.length(); i++) {
			if(Character.isDigit(password.charAt(i)))
				sadrziBroj = true;
			
			if(Character.isLetter(password.charAt(i))) {
				sadrziSlovo = true;
			}
			
			if(Character.isUpperCase(password.charAt(i))) {
				sadrziVelikoSlovo = true;
			}
		}
		
		if(sadrziBroj && sadrziSlovo && sadrziVelikoSlovo)
			return true;
		else
			return false;
	}

	private boolean ispravanUsername(String username) {
		if(username.length() < 3)
			return false;
		
		for(int i = 0; i < username.length(); i++) {
			if(username.charAt(i) == ' ')
				return false;
		}
		
		return true;
	}

	private boolean postojiUsername(String username) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getUsername().equals(username))
				return true;
		}
		
		return false;
	}	
	private boolean postojiEmail(String email) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getEmail().equals(email))
				return true;
		}
		
		return false;
	}	
	private boolean postojiJMBG(String jmbg) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getJmbg().equals(jmbg))
				return true;
		}
		
		return false;
	}
	
	private RegistrovanKorisnik nadjiKorisnika(String username) {
		
		for(int i = 0; i < registrovaniKorisnici.size(); i++) {
			if(registrovaniKorisnici.get(i).getUsername().equals(username))
				return registrovaniKorisnici.get(i);
		}
		
		return null;
	}

	private void serializujPodatke() {
		try {
			ObjectOutputStream korisniciOUT = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream("src/server/registrovaniKorisnici.binary")));
			ObjectOutputStream rezervacijeOUT = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream("src/server/rezervacije.binary")));
			
			for(int i = 0; i < registrovaniKorisnici.size();i++) {
				korisniciOUT.writeObject(registrovaniKorisnici.get(i));
			}
			
			for(int i = 0; i < rezervacijeObicne.size();i++) {
				rezervacijeOUT.writeObject(rezervacijeObicne.get(i));
			}
			
			for(int i = 0; i < rezervacijeVIP.size(); i++) {
				rezervacijeOUT.writeObject(rezervacijeVIP.get(i));
			}
			
			korisniciOUT.close();
			rezervacijeOUT.close();
		}catch(Exception e) {
			
		}
	}
	
	private void deserializujPodatke() {
		try {
			ObjectInputStream korisniciIN = new ObjectInputStream(new BufferedInputStream(new FileInputStream("src/server/registrovaniKorisnici.binary")));
			ObjectInputStream rezervacijeIN = new ObjectInputStream(new BufferedInputStream(new FileInputStream("src/server/rezervacije.binary")));
			
			
			registrovaniKorisnici.clear();
			rezervacijeObicne.clear();
			rezervacijeVIP.clear();
			
			try {
				while(true) {
					RegistrovanKorisnik rk = (RegistrovanKorisnik)(korisniciIN.readObject());
					if(rk != null && !registrovaniKorisnici.contains(rk))
					registrovaniKorisnici.add(rk);
				}
			} catch (EOFException e) {}
			
			try {
				while(true) {
					Rezervacija rok = (Rezervacija)(rezervacijeIN.readObject());
					if(rok != null && !rezervacijeObicne.contains(rok)) {
						if(rok.getTipKarte().equals(TipKarte.OBICNA_KARTA))
							rezervacijeObicne.add(rok);
						else
							rezervacijeVIP.add(rok);
					}
					
				}
			} catch (EOFException e) {}
			
			korisniciIN.close();
			rezervacijeIN.close();
		}catch(Exception e) {
			
		}
	}
	
	private String guestMeni() throws Exception {
		String pocetniMeni = "============================================================\n"
				+ "\t\t\tDOBRODOSLI"
				+ "\n\n\t\t\tPOCETNI MENI\n\n"
				+ "1.Broj preostalih karata\n"
				+ "2.Rezervacija karata\n"
				+ "3.Registracija\n"
				+ "4.Prijavljivanje\n"
				+ "5.Izlaz iz aplikacije\n\n"
				+ "UNESITE BROJ ZELJENE OPCIJE(1-5):";
		
			outputServera.println(pocetniMeni);
			
			return inputKlijenta.readLine();
	}

	private String registrovanKorisnikMeni(String imeKorisnika) throws Exception {
		String pocetniMeni = "============================================================\n"
				+ "\t\t\tDOBRODOSLI " + imeKorisnika.toUpperCase()
				+ "\n\n\t\t\tPOCETNI MENI\n\n"
				+ "1.Broj preostalih karata\n"
				+ "2.Rezervacija karata\n"
				+ "3.Moje rezervacije\n"
				+ "4.Odjavite se\n"
				+ "5.Izlaz iz aplikacije\n\n"
				+ "UNESITE BROJ ZELJENE OPCIJE(1-5):";
		
			outputServera.println(pocetniMeni);
			
			return inputKlijenta.readLine();
	}
	private void zavrsiSesiju() throws IOException {
		outputServera.println("SESIJA JE ZAVRSENA");
		System.out.println("Korisnik je zavrsio svoju sesiju");
		soketZaKomunikaciju.close();
		brojPovezanihKorisnika--;
		serializujPodatke();
	}
	private void odgovorPreostaloKarata() {
		outputServera.println("============================================================\n");
		if(preostaloObicnihKarata > 0) {
			outputServera.println("\nBroj karata koji je preostao iznosi: " + preostaloObicnihKarata); 
		}
		else {
			outputServera.println("\nNema vise dostupnih karata");
		}
	}
	private void odgovorPreostaloKarataRegistrovan() {
		outputServera.println("============================================================\n");
		if(preostaloObicnihKarata > 0) {
			outputServera.println("\nBroj obicnih karata koji je preostao iznosi: " + preostaloObicnihKarata); 
		}
		else {
			outputServera.println("\nNema vise dostupnih obicnih karata");
		}
		if(preostaloVIPKarata > 0) {
			outputServera.println("\nBroj VIP karata koji je preostao iznosi: " + preostaloVIPKarata);
		}
		else {
			outputServera.println("\nNema vise dostupnih VIP karata");
		}
	}
	private boolean rezervacijaKarata(TipKarte tipKarte) throws IOException {
		if(preostaloObicnihKarata > 0) {
			boolean ispravanUnos = false;
			while(!ispravanUnos) {
				outputServera.println("============================================================\n"
						+ "\t\t\tREZERVACIJA KARTE(/quit za povratak na meni)\n"
						+ "Unesite Vase ime:"); 
				String ime = inputKlijenta.readLine();
				if(ime.contains("/quit"))
					return false;
				if(!ispravnoImePrezime(ime)) {
					outputServera.println("\nIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
					continue;
				}
				
				outputServera.println("Unesite Vase prezime: ");
				String prezime = inputKlijenta.readLine();
				if(prezime.contains("/quit"))
					return false;
				if(!ispravnoImePrezime(prezime)) {
					outputServera.println("\nPREZIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
					continue;
				}
				
				outputServera.println("Unesite Vase JMBG: ");
				String jmbg = inputKlijenta.readLine();
				if(jmbg.contains("/quit"))
					return false;
				if(!ispravanJMBG(jmbg)) {
					outputServera.println("\nNEISPRAVAN UNOS, JMBG SADRZI SAMO BROJEVE I DUZINE JE 13 KARATAKTERA, POKUSAJTE PONOVO!");
					continue;
				}
					
				outputServera.println("Unesite Vasu email adresu: ");
				String email = inputKlijenta.readLine();
				if(email.contains("/quit"))
					return false;
				if(!ispravanEmail(email)) {
					outputServera.println("\nNEISPRAVAN UNOS, EMAIL MORA DA SADRZI @ I DOMEN POSLE TOGA, POKUSAJTE PONOVO!");
					continue;
				}
				
				ispravanUnos = true;
				Rezervacija novaRezervacija = new Rezervacija(ime, prezime, jmbg, email, tipKarte);
				rezervacijeObicne.add(novaRezervacija);
				String tekstRezervacije = "\nREZERVACIJA br."+ (rezervacijeObicne.size() + rezervacijeVIP.size()) + "\n\n" + novaRezervacija.toString();
				System.out.println(tekstRezervacije);
				
				
				outputServera.println("\nKARTA JE USPESNO REZERVISANA");
				
				outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
				outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
				outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
			}
			return true;
		}
		else {
			outputServera.println("\nNema vise dostupnih karata");
			return false;
		}
	}
	private RegistrovanKorisnik registrujKorisnika() throws IOException {
		boolean uspesnaRegistracija = false;
		while(!uspesnaRegistracija) {
			outputServera.println("============================================================\n"
					+ "\t\t\tREGISTRACIJA(/quit za povratak na meni)\n\n");
			
			outputServera.println("Username:");
			String username = inputKlijenta.readLine();
			if(username.contains("/quit"))
				return null;
			if(!ispravanUsername(username)) {
				outputServera.println("\nNEISPRAVAN UNOS, USERNAME MORA DA BUDE DUZI OD 3 KARAKTERA I NE SME DA SADRZI RAZMAK, POKUSAJTE PONOVO! ");
				continue;
			}
			if(postojiUsername(username)) {
				outputServera.println("\nUSERNAME JE ZAUZET, POKUSAJTE NEKI DRUGI USERNAME! ");
				continue;
			}
			
			outputServera.println("Password:");
			String password = inputKlijenta.readLine();
			if(password.contains("/quit"))
				return null;
			if(!ispravanPassword(password)) {
				outputServera.println("\nNEISPRAVAN UNOS, LOZINKA MORA DA BUDE DUZA OD 8 KARAKTERA I DA SADRZI MALO I VELIKO SLOVO, KAO I BROJ, POKUSAJTE PONOVO! ");
				continue;
			}
			
			outputServera.println("Ime:");
			String ime = inputKlijenta.readLine();
			if(ime.contains("/quit"))
				return null;
			if(!ispravnoImePrezime(ime)) {
				outputServera.println("\nIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
				continue;
			}
			
			outputServera.println("Prezime:");
			String prezime = inputKlijenta.readLine();
			if(prezime.contains("/quit"))
				return null;
			if(!ispravnoImePrezime(prezime)) {
				outputServera.println("\nPREZIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
				continue;
			}
			
			outputServera.println("JMBG:");
			String jmbg = inputKlijenta.readLine();
			if(jmbg.contains("/quit"))
				return null;
			if(!ispravanJMBG(jmbg)) {
				outputServera.println("\nNEISPRAVAN UNOS, JMBG SADRZI SAMO BROJEVE I DUZINE JE 13 KARATAKTERA, POKUSAJTE PONOVO!");
				continue;
			}
			if(postojiJMBG(jmbg)) {
				outputServera.println("\nKORISNIK SA TIM JMBG-om VEC POSTOJI, POKUSAJTE OPET! ");
				continue;
			}
			
			outputServera.println("Email:");
			String email = inputKlijenta.readLine();
			if(email.contains("/quit"))
				return null;
			if(!ispravanEmail(email)) {
				outputServera.println("\nNEISPRAVAN UNOS, EMAIL MORA DA SADRZI @ I DOMEN POSLE TOGA, POKUSAJTE PONOVO!");
				continue;
			}
			if(postojiEmail(email)) {
				outputServera.println("\nEMAIL JE VEC ISKORISCEN, POKUSAJTE NEKI DRUGI EMAIL! ");
				continue;
			}
			RegistrovanKorisnik noviKorisnik = new RegistrovanKorisnik(username, password, ime, prezime, jmbg, email);
			registrovaniKorisnici.add(noviKorisnik);
			
			outputServera.println("\n\nUSPESNO STE IZVRSILI REGISTRACIJU");
			uspesnaRegistracija = true;
			
			return noviKorisnik;
		}
		
		return null;
	}
	private RegistrovanKorisnik prijaviKorisnika() throws IOException{
		while(true) {
			outputServera.println("============================================================\n"
					+ "\t\t\tPRIJAVLJIVANJE(/quit za povratak na meni)\n\n");
			int brojPokusajaUsername = 3;
			int brojPokusajaLozinka = 3;
			while(brojPokusajaUsername > 0 && brojPokusajaLozinka > 0) {
				outputServera.println("Username:");
				String username = inputKlijenta.readLine();
				if(username.contains("/quit"))
					return null;
				if(postojiUsername(username)) {
					
					
					RegistrovanKorisnik privremeni = nadjiKorisnika(username);
					while(brojPokusajaLozinka > 0) {
						outputServera.println("Password:");
						String password = inputKlijenta.readLine();
						if(password.contains("/quit"))
							return null;
						if(privremeni.getPassword().equals(password)) {
							
							outputServera.println("\nUSPESNO STE SE PRIJAVILI");
							return privremeni;
						}
						else {
							brojPokusajaLozinka--;
							outputServera.println("NETACNA LOZIKA\nIMATE JOS " + brojPokusajaLozinka + " POKUSAJ/A");
							if(brojPokusajaLozinka == 0) {
								outputServera.println("Niste uspeli da se ulogujete");
								break;
							}
						}
					}
					
				}
				else {
					brojPokusajaUsername--;
					if(brojPokusajaUsername == 0) {
						outputServera.println("Niste uspeli da se ulogujete");
						break;
					}else
					{
						outputServera.println("NEPOSTOJECI USERNAME\nIMATE JOS " + brojPokusajaUsername + " POKUSAJ/A");
					}
				}
			}
			if(brojPokusajaUsername == 0 || brojPokusajaLozinka == 0) {
				return null;
			}
		}
	}

	private boolean rezervacijaKarataRegistrovani(RegistrovanKorisnik trenutniKorisnik) throws IOException {
		boolean rezervisano = false;
		while(!rezervisano) {
			outputServera.println("============================================================\n" + 
					"\t\t\tREZERVACIJA KARTE\n");
			
			outputServera.println("1. Rezervisi obicnu kartu");
			outputServera.println("2. Rezervisi vip kartu");
			outputServera.println("3. Povratak na meni\n");
			
			outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
			
			String odg = inputKlijenta.readLine();
			
			switch(odg) {
				case "1": 
					if(preostaloObicnihKarata > 0) {
						boolean uspesnaRezervacija = false;
						while(!uspesnaRezervacija) {
							outputServera.println("============================================================\n" + 
									"\t\t\tREZERVACIJA OBICNE KARTE\n");
							
							outputServera.println("1. Rezervisi kartu sa svojim podacima");
							outputServera.println("2. Iskoristi neke druge podatke za rezervaciju");
							outputServera.println("3. Povratak na meni\n");
							
							outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
							
							String odgovorKorisnika = inputKlijenta.readLine();
							switch(odgovorKorisnika) {
								case "1":
									boolean potvrda = false;
									while(!potvrda) {
										outputServera.println("============================================================\n" + 
												"\t\t\tDA LI STE SIGURNI\n");
										
										outputServera.println("1. DA");
										outputServera.println("2. NE\n");
										
										outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-2): ");
										
										String potvrdaKorisnika = inputKlijenta.readLine();
										
										switch(potvrdaKorisnika) {
											case "1": 
												Rezervacija novaRezervacija = new Rezervacija(trenutniKorisnik.getIme(), trenutniKorisnik.getPrezime(), trenutniKorisnik.getJmbg(), trenutniKorisnik.getEmail(), TipKarte.OBICNA_KARTA);
												rezervacijeObicne.add(novaRezervacija);
												String tekstRezervacije = "\nREZERVACIJA br."+ (rezervacijeObicne.size() + rezervacijeVIP.size()) + "\n\n" + novaRezervacija.toString();
												System.out.println(tekstRezervacije);
												
												outputServera.println("\n\nKARTA JE USPESNO REZERVISANA");
												
												outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
												outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
												outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
												return true;
											case "2": 
												potvrda = true;
												break;
											default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
										}
									}
									break;
								case "2":
									return rezervacijaKarata(TipKarte.OBICNA_KARTA);
								case "3":
									uspesnaRezervacija = true;
									break;
								default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
					}
					else {
						outputServera.println("\nNema vise dostupnih karata");
					}
					break;
					
				case "2": 
					if(preostaloVIPKarata > 0) {
						boolean uspesnaRezervacija = false;
						while(!uspesnaRezervacija) {
							outputServera.println("============================================================\n" + 
									"\t\t\tREZERVACIJA VIP KARTE\n");
							
							outputServera.println("1. Rezervisi kartu sa svojim podacima");
							outputServera.println("2. Iskoristi neke druge podatke za rezervaciju");
							outputServera.println("3. Povratak na meni\n");
							
							outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
							
							String odgovorKorisnika = inputKlijenta.readLine();
							switch(odgovorKorisnika) {
								case "1":
									boolean potvrda = false;
									while(!potvrda) {
										outputServera.println("============================================================\n" + 
												"\t\t\tDA LI STE SIGURNI\n");
										
										outputServera.println("1. DA");
										outputServera.println("2. NE\n");
										
										outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-2): ");
										
										String potvrdaKorisnika = inputKlijenta.readLine();
										
										switch(potvrdaKorisnika) {
											case "1": 
												Rezervacija novaRezervacija = new Rezervacija(trenutniKorisnik.getIme(), trenutniKorisnik.getPrezime(), trenutniKorisnik.getJmbg(), trenutniKorisnik.getEmail(), TipKarte.VIP_KARTA);
												rezervacijeVIP.add(novaRezervacija);
												String tekstRezervacije = "\nREZERVACIJA br."+ (rezervacijeObicne.size() + rezervacijeVIP.size()) + "\n\n" + novaRezervacija.toString();
												System.out.println(tekstRezervacije);
												
												outputServera.println("\n\nKARTA JE USPESNO REZERVISANA");
												
												outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
												outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
												outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
												return true;
											case "2": 
												potvrda = true;
												break;
											default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
										}
									}
									break;
								case "2":
									return rezervacijaKarata(TipKarte.VIP_KARTA);
								case "3":
									uspesnaRezervacija = true;
									break;
								default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
					}
					else {
						outputServera.println("\nNema vise dostupnih VIP karata");
					}
					break;
				case "3":
					return false;
				default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
			}
		
		}
		
		
		return false;
		
	}

	private void opcijeMojeRezervacije(String email) throws IOException {
		int brojac;
		LinkedList<Rezervacija> rezervacijeKorisnika = new LinkedList<>();
		
		for(int i = 0; i < rezervacijeObicne.size(); i++) {
			if(rezervacijeObicne.get(i).getEmail().equals(email))
				rezervacijeKorisnika.add(rezervacijeObicne.get(i));
		}
		
		for(int i = 0; i < rezervacijeVIP.size(); i++) {
			if(rezervacijeVIP.get(i).getEmail().equals(email))
				rezervacijeKorisnika.add(rezervacijeVIP.get(i));
		}
		
		if(rezervacijeKorisnika.isEmpty()) {
			outputServera.println("Trenutno nemate nijednu rezervaciju na Vasu mejl adresu");
			return;
		}
		else {
			for(brojac = 0; brojac < rezervacijeKorisnika.size(); brojac++) {
				outputServera.println((brojac + 1) + ". " + rezervacijeKorisnika.get(brojac) + "\n");
			}
			boolean uspesnaObrada = false;
			while(!uspesnaObrada) {
				outputServera.println("\nObrisati rezervaciju (DA/NE): ");
				String odgovorKlijenta = inputKlijenta.readLine().toLowerCase();
				switch(odgovorKlijenta) {
					case "da": 
						while(true) {
							outputServera.println("\nUnesite broj redni broj rezervacije koju zelite da obrisete: ");
							int brojRezervacije = Integer.parseInt(inputKlijenta.readLine());
							if(brojRezervacije > 0 && brojRezervacije <= rezervacijeKorisnika.size()) {
								Rezervacija izbrisanaRezervacija = rezervacijeKorisnika.remove(brojRezervacije - 1);
								if(izbrisanaRezervacija.getTipKarte() == TipKarte.OBICNA_KARTA) {
									rezervacijeObicne.remove(izbrisanaRezervacija);
								}
								else {
									rezervacijeVIP.remove(izbrisanaRezervacija);
								}
								outputServera.println("\nUspesno obrisana rezervacija br." + brojRezervacije);
								serializujPodatke();
								uspesnaObrada = true;
								break;
							}
							else {
								outputServera.println("\nIzabrali ste nepostojeci broj rezervacije, pokusajte ponovo");
							}
						}
						break;
					case "ne":
						return;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
				}
			}
			
		}
		
		
		
		
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-12-25 20:27:52.007
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-12-25 20:27:52.074
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:501)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-12-25 20:27:52.116
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package server;

import java.io.*;
import java.net.*;
import java.util.LinkedList;


public class Server extends Thread{
	
	Socket soketZaKomunikaciju;
	BufferedReader inputKlijenta;
	PrintStream outputServera;
	
	static int brojPovezanihKorisnika = 0;
	LinkedList<RegistrovanKorisnik> registrovaniKorisnici = new LinkedList<>();
	LinkedList<Rezervacija> rezervacijeObicne = new LinkedList<>();
	LinkedList<Rezervacija> rezervacijeVIP = new LinkedList<>();
	final int UKUPNO_REZERVACIJA_OBICNE = 20;
	final int UKUPNO_REZERVACIJA_VIP = 5;
	
	int preostaloObicnihKarata;
	int preostaloVIPKarata;
	
	public Server(Socket soketZaKomunikaciju) {
		this.soketZaKomunikaciju = soketZaKomunikaciju;
		start();
	}

	public static void main(String[] args) {
		try{
			System.out.println("Server je poceo sa radom i osluskuje na portu 8090..");
			
			ServerSocket serverSocket = new ServerSocket(8090);
			serverSocket.setSoTimeout(10000);
			while(true) {
				new Server(serverSocket.accept());
				brojPovezanihKorisnika++;
				System.out.println("\nPrihvacen zahtev od korisnika " );
				System.out.println("Trenutno povezano: " + brojPovezanihKorisnika + " korisnik/a");
			}
			serverSocket/c
			
		}catch (BindException e) {
			System.out.println("SERVER RADI, NE MOZETE GA POKRENUTI PONOVO");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	@Override
	public void run() {
//		Ulazno-izlazni tokovi
		try {
			inputKlijenta = new BufferedReader(new InputStreamReader(soketZaKomunikaciju.getInputStream()));
			outputServera = new PrintStream(soketZaKomunikaciju.getOutputStream());
			
			boolean registrovanKorisnik = false;
			boolean zavrsenaSesija = false;
			RegistrovanKorisnik trenutniKorisnik = null;
			
			outputServera.println("Uspesno ste se povezali na server\n\n");
			
			deserializujPodatke();
			

			int brojRezervisanihKarataPoKlijentu = 0;
			while(true && !zavrsenaSesija) {
				preostaloObicnihKarata = UKUPNO_REZERVACIJA_OBICNE - rezervacijeObicne.size();
				preostaloVIPKarata = UKUPNO_REZERVACIJA_VIP - rezervacijeVIP.size();
				
				if(registrovanKorisnik) {
					String odgovorKlijenta = registrovanKorisnikMeni(trenutniKorisnik.getIme());
					
					switch(odgovorKlijenta) {
					case "1":
						odgovorPreostaloKarataRegistrovan();
						break;
					case "2":
						if(brojRezervisanihKarataPoKlijentu < 4) {
							if(rezervacijaKarataRegistrovani(trenutniKorisnik)) {
								brojRezervisanihKarataPoKlijentu++;
								outputServera.println("\nRezervisanih do sada: " + brojRezervisanihKarataPoKlijentu);
								
								serializujPodatke();
							}
						}
						break;
					case "3":
						opcijeMojeRezervacije(trenutniKorisnik.getEmail());
						break;
					case "4":
						boolean uspesnaOdjava = false;
						while(!uspesnaOdjava) {
							outputServera.println("\nDa li ste sigurni(da/ne):");
							String reply = inputKlijenta.readLine().toLowerCase();
							switch(reply) {
							case "da":
								outputServera.println("\nUSPESNO STE SE ODJAVILI");
								registrovanKorisnik = false;
								trenutniKorisnik = null;
								uspesnaOdjava = true;
								break;
							case "ne":
								uspesnaOdjava = true;
								break;
							default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
						
						break;
					case "5" :
						zavrsenaSesija = true;
						break;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
					}
				}
				else {
					String odgovorKlijenta = guestMeni();
					
					switch(odgovorKlijenta) {
					case "1" :
						odgovorPreostaloKarata();
						
						break;
					case "2" :
						if(brojRezervisanihKarataPoKlijentu < 4) {
							
							if(rezervacijaKarata(TipKarte.OBICNA_KARTA)) {
								brojRezervisanihKarataPoKlijentu++;
								outputServera.println("\nRezervisanih do sada: " + brojRezervisanihKarataPoKlijentu);
								
								serializujPodatke();
							}
						}
						else {
							outputServera.println("\nNije moguce rezervisanje vise od 4 karte po korisniku");
						}
							
							break;
					case "3" : 
						trenutniKorisnik = registrujKorisnika();
						if(trenutniKorisnik != null)
							registrovanKorisnik = true;	
							
						serializujPodatke();
							
						break;
					case "4" :
						trenutniKorisnik = prijaviKorisnika();
						if(trenutniKorisnik != null)
						registrovanKorisnik = true;
						
						break;
					case "5" :
						zavrsenaSesija = true;
						break;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
					}
				}
				if(!zavrsenaSesija) {
					outputServera.println("\n\nPritisnite ENTER za povratak na meni\n");
					inputKlijenta.readLine();
				}
			}
			
			zavrsiSesiju();
			
			
		}
		catch(SocketException e) {
			System.out.println("Korisnik se iznenando prekinuo konekciju");
			brojPovezanihKorisnika--;
		}
		catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private boolean ispravanJMBG(String jmbg) {
		if(jmbg.toLowerCase().contains("/quit")) {
			try {
				zavrsiSesiju();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return false;
		}
		
		if(jmbg.length() != 13) {
			return false;
		}
		
		for(int i = 0; i < 13; i++){
			if(jmbg.charAt(i) >= '0' && jmbg.charAt(i) <= '9')
				continue;
			else
				return false;
		}
		return true;
	}
	
	private boolean ispravnoImePrezime(String unetString) {
		String[] niz = unetString.split(" ");
		for(int i = 0; i < niz.length; i++) {
			for(int j = 0; j < niz[i].length(); j++) {
				if(Character.isLetter(niz[i].charAt(j)))
					continue;
				else
					return false;
			}
		}
		
		return true;
	}
	
	private boolean ispravanEmail(String email) {
		if(email.contains("@") && email.lastIndexOf(".") > email.indexOf("@"))
			return true;
		else
			return false;
	}
	
	private boolean ispravanPassword(String password) {
		if(password.length() < 8)
			return false;
		
		boolean sadrziBroj = false;
		boolean sadrziSlovo = false;
		boolean sadrziVelikoSlovo = false;
		for(int i = 0; i < password.length(); i++) {
			if(Character.isDigit(password.charAt(i)))
				sadrziBroj = true;
			
			if(Character.isLetter(password.charAt(i))) {
				sadrziSlovo = true;
			}
			
			if(Character.isUpperCase(password.charAt(i))) {
				sadrziVelikoSlovo = true;
			}
		}
		
		if(sadrziBroj && sadrziSlovo && sadrziVelikoSlovo)
			return true;
		else
			return false;
	}

	private boolean ispravanUsername(String username) {
		if(username.length() < 3)
			return false;
		
		for(int i = 0; i < username.length(); i++) {
			if(username.charAt(i) == ' ')
				return false;
		}
		
		return true;
	}

	private boolean postojiUsername(String username) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getUsername().equals(username))
				return true;
		}
		
		return false;
	}	
	private boolean postojiEmail(String email) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getEmail().equals(email))
				return true;
		}
		
		return false;
	}	
	private boolean postojiJMBG(String jmbg) {
		for(RegistrovanKorisnik korisnik : registrovaniKorisnici) {
			if(korisnik != null && korisnik.getJmbg().equals(jmbg))
				return true;
		}
		
		return false;
	}
	
	private RegistrovanKorisnik nadjiKorisnika(String username) {
		
		for(int i = 0; i < registrovaniKorisnici.size(); i++) {
			if(registrovaniKorisnici.get(i).getUsername().equals(username))
				return registrovaniKorisnici.get(i);
		}
		
		return null;
	}

	private void serializujPodatke() {
		try {
			ObjectOutputStream korisniciOUT = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream("src/server/registrovaniKorisnici.binary")));
			ObjectOutputStream rezervacijeOUT = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream("src/server/rezervacije.binary")));
			
			for(int i = 0; i < registrovaniKorisnici.size();i++) {
				korisniciOUT.writeObject(registrovaniKorisnici.get(i));
			}
			
			for(int i = 0; i < rezervacijeObicne.size();i++) {
				rezervacijeOUT.writeObject(rezervacijeObicne.get(i));
			}
			
			for(int i = 0; i < rezervacijeVIP.size(); i++) {
				rezervacijeOUT.writeObject(rezervacijeVIP.get(i));
			}
			
			korisniciOUT.close();
			rezervacijeOUT.close();
		}catch(Exception e) {
			
		}
	}
	
	private void deserializujPodatke() {
		try {
			ObjectInputStream korisniciIN = new ObjectInputStream(new BufferedInputStream(new FileInputStream("src/server/registrovaniKorisnici.binary")));
			ObjectInputStream rezervacijeIN = new ObjectInputStream(new BufferedInputStream(new FileInputStream("src/server/rezervacije.binary")));
			
			
			registrovaniKorisnici.clear();
			rezervacijeObicne.clear();
			rezervacijeVIP.clear();
			
			try {
				while(true) {
					RegistrovanKorisnik rk = (RegistrovanKorisnik)(korisniciIN.readObject());
					if(rk != null && !registrovaniKorisnici.contains(rk))
					registrovaniKorisnici.add(rk);
				}
			} catch (EOFException e) {}
			
			try {
				while(true) {
					Rezervacija rok = (Rezervacija)(rezervacijeIN.readObject());
					if(rok != null && !rezervacijeObicne.contains(rok)) {
						if(rok.getTipKarte().equals(TipKarte.OBICNA_KARTA))
							rezervacijeObicne.add(rok);
						else
							rezervacijeVIP.add(rok);
					}
					
				}
			} catch (EOFException e) {}
			
			korisniciIN.close();
			rezervacijeIN.close();
		}catch(Exception e) {
			
		}
	}
	
	private String guestMeni() throws Exception {
		String pocetniMeni = "============================================================\n"
				+ "\t\t\tDOBRODOSLI"
				+ "\n\n\t\t\tPOCETNI MENI\n\n"
				+ "1.Broj preostalih karata\n"
				+ "2.Rezervacija karata\n"
				+ "3.Registracija\n"
				+ "4.Prijavljivanje\n"
				+ "5.Izlaz iz aplikacije\n\n"
				+ "UNESITE BROJ ZELJENE OPCIJE(1-5):";
		
			outputServera.println(pocetniMeni);
			
			return inputKlijenta.readLine();
	}

	private String registrovanKorisnikMeni(String imeKorisnika) throws Exception {
		String pocetniMeni = "============================================================\n"
				+ "\t\t\tDOBRODOSLI " + imeKorisnika.toUpperCase()
				+ "\n\n\t\t\tPOCETNI MENI\n\n"
				+ "1.Broj preostalih karata\n"
				+ "2.Rezervacija karata\n"
				+ "3.Moje rezervacije\n"
				+ "4.Odjavite se\n"
				+ "5.Izlaz iz aplikacije\n\n"
				+ "UNESITE BROJ ZELJENE OPCIJE(1-5):";
		
			outputServera.println(pocetniMeni);
			
			return inputKlijenta.readLine();
	}
	private void zavrsiSesiju() throws IOException {
		outputServera.println("SESIJA JE ZAVRSENA");
		System.out.println("Korisnik je zavrsio svoju sesiju");
		soketZaKomunikaciju.close();
		brojPovezanihKorisnika--;
		serializujPodatke();
	}
	private void odgovorPreostaloKarata() {
		outputServera.println("============================================================\n");
		if(preostaloObicnihKarata > 0) {
			outputServera.println("\nBroj karata koji je preostao iznosi: " + preostaloObicnihKarata); 
		}
		else {
			outputServera.println("\nNema vise dostupnih karata");
		}
	}
	private void odgovorPreostaloKarataRegistrovan() {
		outputServera.println("============================================================\n");
		if(preostaloObicnihKarata > 0) {
			outputServera.println("\nBroj obicnih karata koji je preostao iznosi: " + preostaloObicnihKarata); 
		}
		else {
			outputServera.println("\nNema vise dostupnih obicnih karata");
		}
		if(preostaloVIPKarata > 0) {
			outputServera.println("\nBroj VIP karata koji je preostao iznosi: " + preostaloVIPKarata);
		}
		else {
			outputServera.println("\nNema vise dostupnih VIP karata");
		}
	}
	private boolean rezervacijaKarata(TipKarte tipKarte) throws IOException {
		if(preostaloObicnihKarata > 0) {
			boolean ispravanUnos = false;
			while(!ispravanUnos) {
				outputServera.println("============================================================\n"
						+ "\t\t\tREZERVACIJA KARTE(/quit za povratak na meni)\n"
						+ "Unesite Vase ime:"); 
				String ime = inputKlijenta.readLine();
				if(ime.contains("/quit"))
					return false;
				if(!ispravnoImePrezime(ime)) {
					outputServera.println("\nIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
					continue;
				}
				
				outputServera.println("Unesite Vase prezime: ");
				String prezime = inputKlijenta.readLine();
				if(prezime.contains("/quit"))
					return false;
				if(!ispravnoImePrezime(prezime)) {
					outputServera.println("\nPREZIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
					continue;
				}
				
				outputServera.println("Unesite Vase JMBG: ");
				String jmbg = inputKlijenta.readLine();
				if(jmbg.contains("/quit"))
					return false;
				if(!ispravanJMBG(jmbg)) {
					outputServera.println("\nNEISPRAVAN UNOS, JMBG SADRZI SAMO BROJEVE I DUZINE JE 13 KARATAKTERA, POKUSAJTE PONOVO!");
					continue;
				}
					
				outputServera.println("Unesite Vasu email adresu: ");
				String email = inputKlijenta.readLine();
				if(email.contains("/quit"))
					return false;
				if(!ispravanEmail(email)) {
					outputServera.println("\nNEISPRAVAN UNOS, EMAIL MORA DA SADRZI @ I DOMEN POSLE TOGA, POKUSAJTE PONOVO!");
					continue;
				}
				
				ispravanUnos = true;
				Rezervacija novaRezervacija = new Rezervacija(ime, prezime, jmbg, email, tipKarte);
				rezervacijeObicne.add(novaRezervacija);
				String tekstRezervacije = "\nREZERVACIJA br."+ (rezervacijeObicne.size() + rezervacijeVIP.size()) + "\n\n" + novaRezervacija.toString();
				System.out.println(tekstRezervacije);
				
				
				outputServera.println("\nKARTA JE USPESNO REZERVISANA");
				
				outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
				outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
				outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
			}
			return true;
		}
		else {
			outputServera.println("\nNema vise dostupnih karata");
			return false;
		}
	}
	private RegistrovanKorisnik registrujKorisnika() throws IOException {
		boolean uspesnaRegistracija = false;
		while(!uspesnaRegistracija) {
			outputServera.println("============================================================\n"
					+ "\t\t\tREGISTRACIJA(/quit za povratak na meni)\n\n");
			
			outputServera.println("Username:");
			String username = inputKlijenta.readLine();
			if(username.contains("/quit"))
				return null;
			if(!ispravanUsername(username)) {
				outputServera.println("\nNEISPRAVAN UNOS, USERNAME MORA DA BUDE DUZI OD 3 KARAKTERA I NE SME DA SADRZI RAZMAK, POKUSAJTE PONOVO! ");
				continue;
			}
			if(postojiUsername(username)) {
				outputServera.println("\nUSERNAME JE ZAUZET, POKUSAJTE NEKI DRUGI USERNAME! ");
				continue;
			}
			
			outputServera.println("Password:");
			String password = inputKlijenta.readLine();
			if(password.contains("/quit"))
				return null;
			if(!ispravanPassword(password)) {
				outputServera.println("\nNEISPRAVAN UNOS, LOZINKA MORA DA BUDE DUZA OD 8 KARAKTERA I DA SADRZI MALO I VELIKO SLOVO, KAO I BROJ, POKUSAJTE PONOVO! ");
				continue;
			}
			
			outputServera.println("Ime:");
			String ime = inputKlijenta.readLine();
			if(ime.contains("/quit"))
				return null;
			if(!ispravnoImePrezime(ime)) {
				outputServera.println("\nIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
				continue;
			}
			
			outputServera.println("Prezime:");
			String prezime = inputKlijenta.readLine();
			if(prezime.contains("/quit"))
				return null;
			if(!ispravnoImePrezime(prezime)) {
				outputServera.println("\nPREZIME SME SAMO SLOVA DA SADRZI, POKUSAJTE PONOVO!");
				continue;
			}
			
			outputServera.println("JMBG:");
			String jmbg = inputKlijenta.readLine();
			if(jmbg.contains("/quit"))
				return null;
			if(!ispravanJMBG(jmbg)) {
				outputServera.println("\nNEISPRAVAN UNOS, JMBG SADRZI SAMO BROJEVE I DUZINE JE 13 KARATAKTERA, POKUSAJTE PONOVO!");
				continue;
			}
			if(postojiJMBG(jmbg)) {
				outputServera.println("\nKORISNIK SA TIM JMBG-om VEC POSTOJI, POKUSAJTE OPET! ");
				continue;
			}
			
			outputServera.println("Email:");
			String email = inputKlijenta.readLine();
			if(email.contains("/quit"))
				return null;
			if(!ispravanEmail(email)) {
				outputServera.println("\nNEISPRAVAN UNOS, EMAIL MORA DA SADRZI @ I DOMEN POSLE TOGA, POKUSAJTE PONOVO!");
				continue;
			}
			if(postojiEmail(email)) {
				outputServera.println("\nEMAIL JE VEC ISKORISCEN, POKUSAJTE NEKI DRUGI EMAIL! ");
				continue;
			}
			RegistrovanKorisnik noviKorisnik = new RegistrovanKorisnik(username, password, ime, prezime, jmbg, email);
			registrovaniKorisnici.add(noviKorisnik);
			
			outputServera.println("\n\nUSPESNO STE IZVRSILI REGISTRACIJU");
			uspesnaRegistracija = true;
			
			return noviKorisnik;
		}
		
		return null;
	}
	private RegistrovanKorisnik prijaviKorisnika() throws IOException{
		while(true) {
			outputServera.println("============================================================\n"
					+ "\t\t\tPRIJAVLJIVANJE(/quit za povratak na meni)\n\n");
			int brojPokusajaUsername = 3;
			int brojPokusajaLozinka = 3;
			while(brojPokusajaUsername > 0 && brojPokusajaLozinka > 0) {
				outputServera.println("Username:");
				String username = inputKlijenta.readLine();
				if(username.contains("/quit"))
					return null;
				if(postojiUsername(username)) {
					
					
					RegistrovanKorisnik privremeni = nadjiKorisnika(username);
					while(brojPokusajaLozinka > 0) {
						outputServera.println("Password:");
						String password = inputKlijenta.readLine();
						if(password.contains("/quit"))
							return null;
						if(privremeni.getPassword().equals(password)) {
							
							outputServera.println("\nUSPESNO STE SE PRIJAVILI");
							return privremeni;
						}
						else {
							brojPokusajaLozinka--;
							outputServera.println("NETACNA LOZIKA\nIMATE JOS " + brojPokusajaLozinka + " POKUSAJ/A");
							if(brojPokusajaLozinka == 0) {
								outputServera.println("Niste uspeli da se ulogujete");
								break;
							}
						}
					}
					
				}
				else {
					brojPokusajaUsername--;
					if(brojPokusajaUsername == 0) {
						outputServera.println("Niste uspeli da se ulogujete");
						break;
					}else
					{
						outputServera.println("NEPOSTOJECI USERNAME\nIMATE JOS " + brojPokusajaUsername + " POKUSAJ/A");
					}
				}
			}
			if(brojPokusajaUsername == 0 || brojPokusajaLozinka == 0) {
				return null;
			}
		}
	}

	private boolean rezervacijaKarataRegistrovani(RegistrovanKorisnik trenutniKorisnik) throws IOException {
		boolean rezervisano = false;
		while(!rezervisano) {
			outputServera.println("============================================================\n" + 
					"\t\t\tREZERVACIJA KARTE\n");
			
			outputServera.println("1. Rezervisi obicnu kartu");
			outputServera.println("2. Rezervisi vip kartu");
			outputServera.println("3. Povratak na meni\n");
			
			outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
			
			String odg = inputKlijenta.readLine();
			
			switch(odg) {
				case "1": 
					if(preostaloObicnihKarata > 0) {
						boolean uspesnaRezervacija = false;
						while(!uspesnaRezervacija) {
							outputServera.println("============================================================\n" + 
									"\t\t\tREZERVACIJA OBICNE KARTE\n");
							
							outputServera.println("1. Rezervisi kartu sa svojim podacima");
							outputServera.println("2. Iskoristi neke druge podatke za rezervaciju");
							outputServera.println("3. Povratak na meni\n");
							
							outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
							
							String odgovorKorisnika = inputKlijenta.readLine();
							switch(odgovorKorisnika) {
								case "1":
									boolean potvrda = false;
									while(!potvrda) {
										outputServera.println("============================================================\n" + 
												"\t\t\tDA LI STE SIGURNI\n");
										
										outputServera.println("1. DA");
										outputServera.println("2. NE\n");
										
										outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-2): ");
										
										String potvrdaKorisnika = inputKlijenta.readLine();
										
										switch(potvrdaKorisnika) {
											case "1": 
												Rezervacija novaRezervacija = new Rezervacija(trenutniKorisnik.getIme(), trenutniKorisnik.getPrezime(), trenutniKorisnik.getJmbg(), trenutniKorisnik.getEmail(), TipKarte.OBICNA_KARTA);
												rezervacijeObicne.add(novaRezervacija);
												String tekstRezervacije = "\nREZERVACIJA br."+ (rezervacijeObicne.size() + rezervacijeVIP.size()) + "\n\n" + novaRezervacija.toString();
												System.out.println(tekstRezervacije);
												
												outputServera.println("\n\nKARTA JE USPESNO REZERVISANA");
												
												outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
												outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
												outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
												return true;
											case "2": 
												potvrda = true;
												break;
											default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
										}
									}
									break;
								case "2":
									return rezervacijaKarata(TipKarte.OBICNA_KARTA);
								case "3":
									uspesnaRezervacija = true;
									break;
								default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
					}
					else {
						outputServera.println("\nNema vise dostupnih karata");
					}
					break;
					
				case "2": 
					if(preostaloVIPKarata > 0) {
						boolean uspesnaRezervacija = false;
						while(!uspesnaRezervacija) {
							outputServera.println("============================================================\n" + 
									"\t\t\tREZERVACIJA VIP KARTE\n");
							
							outputServera.println("1. Rezervisi kartu sa svojim podacima");
							outputServera.println("2. Iskoristi neke druge podatke za rezervaciju");
							outputServera.println("3. Povratak na meni\n");
							
							outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-3):");
							
							String odgovorKorisnika = inputKlijenta.readLine();
							switch(odgovorKorisnika) {
								case "1":
									boolean potvrda = false;
									while(!potvrda) {
										outputServera.println("============================================================\n" + 
												"\t\t\tDA LI STE SIGURNI\n");
										
										outputServera.println("1. DA");
										outputServera.println("2. NE\n");
										
										outputServera.println("UNESITE BROJ ZELJENE OPCIJE(1-2): ");
										
										String potvrdaKorisnika = inputKlijenta.readLine();
										
										switch(potvrdaKorisnika) {
											case "1": 
												Rezervacija novaRezervacija = new Rezervacija(trenutniKorisnik.getIme(), trenutniKorisnik.getPrezime(), trenutniKorisnik.getJmbg(), trenutniKorisnik.getEmail(), TipKarte.VIP_KARTA);
												rezervacijeVIP.add(novaRezervacija);
												String tekstRezervacije = "\nREZERVACIJA br."+ (rezervacijeObicne.size() + rezervacijeVIP.size()) + "\n\n" + novaRezervacija.toString();
												System.out.println(tekstRezervacije);
												
												outputServera.println("\n\nKARTA JE USPESNO REZERVISANA");
												
												outputServera.println("\nPoslate su i informacije o rezervaciji u fajlu");
												outputServera.println(rezervacijeObicne.size() + rezervacijeVIP.size());
												outputServera.println("============================================================\n" + tekstRezervacije + "\n\nKRAJ REZERVACIJE");
												return true;
											case "2": 
												potvrda = true;
												break;
											default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
										}
									}
									break;
								case "2":
									return rezervacijaKarata(TipKarte.VIP_KARTA);
								case "3":
									uspesnaRezervacija = true;
									break;
								default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
							}
						}
					}
					else {
						outputServera.println("\nNema vise dostupnih VIP karata");
					}
					break;
				case "3":
					return false;
				default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
			}
		
		}
		
		
		return false;
		
	}

	private void opcijeMojeRezervacije(String email) throws IOException {
		int brojac;
		LinkedList<Rezervacija> rezervacijeKorisnika = new LinkedList<>();
		
		for(int i = 0; i < rezervacijeObicne.size(); i++) {
			if(rezervacijeObicne.get(i).getEmail().equals(email))
				rezervacijeKorisnika.add(rezervacijeObicne.get(i));
		}
		
		for(int i = 0; i < rezervacijeVIP.size(); i++) {
			if(rezervacijeVIP.get(i).getEmail().equals(email))
				rezervacijeKorisnika.add(rezervacijeVIP.get(i));
		}
		
		if(rezervacijeKorisnika.isEmpty()) {
			outputServera.println("Trenutno nemate nijednu rezervaciju na Vasu mejl adresu");
			return;
		}
		else {
			for(brojac = 0; brojac < rezervacijeKorisnika.size(); brojac++) {
				outputServera.println((brojac + 1) + ". " + rezervacijeKorisnika.get(brojac) + "\n");
			}
			boolean uspesnaObrada = false;
			while(!uspesnaObrada) {
				outputServera.println("\nObrisati rezervaciju (DA/NE): ");
				String odgovorKlijenta = inputKlijenta.readLine().toLowerCase();
				switch(odgovorKlijenta) {
					case "da": 
						while(true) {
							outputServera.println("\nUnesite broj redni broj rezervacije koju zelite da obrisete: ");
							int brojRezervacije = Integer.parseInt(inputKlijenta.readLine());
							if(brojRezervacije > 0 && brojRezervacije <= rezervacijeKorisnika.size()) {
								Rezervacija izbrisanaRezervacija = rezervacijeKorisnika.remove(brojRezervacije - 1);
								if(izbrisanaRezervacija.getTipKarte() == TipKarte.OBICNA_KARTA) {
									rezervacijeObicne.remove(izbrisanaRezervacija);
								}
								else {
									rezervacijeVIP.remove(izbrisanaRezervacija);
								}
								outputServera.println("\nUspesno obrisana rezervacija br." + brojRezervacije);
								serializujPodatke();
								uspesnaObrada = true;
								break;
							}
							else {
								outputServera.println("\nIzabrali ste nepostojeci broj rezervacije, pokusajte ponovo");
							}
						}
						break;
					case "ne":
						return;
					default: outputServera.println("Izabrali ste nepostojecu opciju"); break;
				}
			}
			
		}
		
		
		
		
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-12-25 20:27:52.124
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-12-25 20:27:52.126
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2033)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3797)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1945)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1976)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3054)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2972)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3448)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3046)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3349)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1526)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1279)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2022-12-25 21:04:42.453 -----------------------------------------------
eclipse.buildId=4.21.0.I20210906-0500
java.version=16.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 4 567 2022-12-25 21:04:55.465
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2022-12-25 21:04:55.466
!MESSAGE Could not read metadata for 'Chat sa 10 klijenata'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/Chat sa 10 klijenata)[567]: java.lang.Exception: The project description file (.project) for 'Chat sa 10 klijenata' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:388)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:463)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2022-12-25 21:04:55.468
!MESSAGE The project description file (.project) for 'Chat sa 10 klijenata' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for 'Chat sa 10 klijenata' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:388)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:463)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 1 org.eclipse.core.resources 4 567 2022-12-25 21:04:55.471
!MESSAGE Could not read metadata for 'Mala slova u velika'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/Mala slova u velika)[567]: java.lang.Exception: The project description file (.project) for 'Mala slova u velika' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:388)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:463)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2022-12-25 21:04:55.472
!MESSAGE The project description file (.project) for 'Mala slova u velika' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for 'Mala slova u velika' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:345)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:388)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:463)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:170)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 2 0 2022-12-25 21:05:10.521
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 21:05:10.521
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@18ac25e6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e1a7d3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-12-25 21:05:10.521
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1eda309d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@248d2cec,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-12-25 21:05:17.430
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Asus i5'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
